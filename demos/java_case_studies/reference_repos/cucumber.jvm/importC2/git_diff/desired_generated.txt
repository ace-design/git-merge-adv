diff --git a/java_case_studies/reference_repos/cucumber.jvm/importC2/desired.java b/java_case_studies/demo_results/MethodUnion/cucumber.jvm-importC2.java
index 77b1822..22b72ee 100644
--- a/java_case_studies/reference_repos/cucumber.jvm/importC2/desired.java
+++ b/java_case_studies/demo_results/MethodUnion/cucumber.jvm-importC2.java
@@ -1,11 +1,9 @@
 package io.cucumber.core.options;
-
 import io.cucumber.core.backend.ObjectFactory;
-import io.cucumber.core.feature.FeatureWithLines;
 import io.cucumber.core.order.PickleOrder;
+import io.cucumber.core.feature.FeatureWithLines;
 import io.cucumber.core.order.StandardPickleOrders;
 import io.cucumber.core.snippets.SnippetType;
-
 import java.net.URI;
 import java.util.ArrayList;
 import java.util.HashMap;
@@ -16,7 +14,6 @@ import java.util.SortedSet;
 import java.util.TreeSet;
 import java.util.regex.Pattern;
 import java.util.stream.Collectors;
-
 import static java.util.Collections.unmodifiableList;
 import static java.util.Collections.unmodifiableMap;
 
@@ -25,25 +22,23 @@ public final class RuntimeOptions implements
     io.cucumber.core.runner.Options,
     io.cucumber.core.plugin.Options,
     io.cucumber.core.filter.Options,
-    io.cucumber.core.backend.Options {
-
-    private final List<URI> glue = new ArrayList<>();
-    private final List<String> tagExpressions = new ArrayList<>();
-    private final List<Pattern> nameFilters = new ArrayList<>();
-    private final List<FeatureWithLines> featurePaths = new ArrayList<>();
-
-    private boolean dryRun;
-    private boolean strict = false;
-    private boolean monochrome = false;
-    private boolean wip = false;
-    private SnippetType snippetType = SnippetType.UNDERSCORE;
-    private int threads = 1;
-    private PickleOrder pickleOrder = StandardPickleOrders.lexicalUriOrder();
-    private int count = 0;
-
-    private final List<Plugin> formatters = new ArrayList<>();
-    private final List<Plugin> summaryPrinters = new ArrayList<>();
-    private Class<? extends ObjectFactory> objectFactoryClass;
+    io.cucumber.core.backend.Options{
+
+    private final List<URI> glue = new ArrayList<>();,
+    private final List<String> tagExpressions = new ArrayList<>();,
+    private final List<Pattern> nameFilters = new ArrayList<>();,
+    private final List<FeatureWithLines> featurePaths = new ArrayList<>();,
+    private boolean dryRun;,
+    private boolean strict = false;,
+    private boolean monochrome = false;,
+    private boolean wip = false;,
+    private SnippetType snippetType = SnippetType.UNDERSCORE;,
+    private int threads = 1;,
+    private PickleOrder pickleOrder = StandardPickleOrders.lexicalUriOrder();,
+    private int count = 0;,
+    private final List<Plugin> formatters = new ArrayList<>();,
+    private final List<Plugin> summaryPrinters = new ArrayList<>();,
+    private Class<? extends ObjectFactory> objectFactoryClass;,
 
     private RuntimeOptions() {
 
@@ -65,7 +60,7 @@ public final class RuntimeOptions implements
         return summaryPrinters;
     }
 
-    public boolean isMultiTestNGFThreaded() {
+    public boolean isMultiThreaded() {
         return getThreads() > 1;
     }
 
@@ -213,4 +208,5 @@ public final class RuntimeOptions implements
     void setObjectFactoryClass(Class<? extends ObjectFactory> objectFactoryClass) {
         this.objectFactoryClass = objectFactoryClass;
     }
-}
+
+}
\ No newline at end of file
