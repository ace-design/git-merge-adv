diff --git a/java_case_studies/reference_repos/stateless4j/conflict4/left.java b/java_case_studies/reference_repos/stateless4j/conflict4/right.java
index 8840bec..4d7e475 100644
--- a/java_case_studies/reference_repos/stateless4j/conflict4/left.java
+++ b/java_case_studies/reference_repos/stateless4j/conflict4/right.java
@@ -1,19 +1,22 @@
 package com.github.oxo42.stateless4j.triggers;
 
+import com.github.oxo42.stateless4j.OutVar;
 import com.github.oxo42.stateless4j.delegates.Func;
 import com.github.oxo42.stateless4j.delegates.Func2;
+import com.github.oxo42.stateless4j.validation.Enforce;
 
 public class DynamicTriggerBehaviour<TState, TTrigger> extends TriggerBehaviour<TState, TTrigger> {
 
-    private Func2<Object[], TState> destination;
+    private final Func2<Object[], TState> destination;
 
-    public DynamicTriggerBehaviour(final TTrigger trigger, final Func2<Object[], TState> destination, final Func<Boolean> guard) {
+    public DynamicTriggerBehaviour(TTrigger trigger, Func2<Object[], TState> destination, Func<Boolean> guard) {
         super(trigger, guard);
-        assert destination != null : "destination is null";
-        this.destination = destination;
+        this.destination = Enforce.argumentNotNull(destination, "destination");
     }
 
-    public TState resultsInTransitionFrom(TState source, Object... args) {
-        return destination.call(args);
+    @Override
+    public boolean resultsInTransitionFrom(TState source, Object[] args, OutVar<TState> dest) {
+        dest.set(destination.call(args));
+        return true;
     }
 }
