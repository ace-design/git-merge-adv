diff --git a/java_case_studies/reference_repos/antlr4/importC7/base.java b/java_case_studies/reference_repos/antlr4/importC7/right.java
index 19687e5..1873550 100644
--- a/java_case_studies/reference_repos/antlr4/importC7/base.java
+++ b/java_case_studies/reference_repos/antlr4/importC7/right.java
@@ -29,9 +29,15 @@
 
 package org.antlr.v4.runtime.atn;
 
-import org.antlr.v4.runtime.*;
+import org.antlr.v4.runtime.CharStream;
+import org.antlr.v4.runtime.IntStream;
+import org.antlr.v4.runtime.Lexer;
+import org.antlr.v4.runtime.LexerNoViableAltException;
+import org.antlr.v4.runtime.RuleContext;
+import org.antlr.v4.runtime.Token;
 import org.antlr.v4.runtime.dfa.DFA;
 import org.antlr.v4.runtime.dfa.DFAState;
+import org.antlr.v4.runtime.misc.Interval;
 import org.antlr.v4.runtime.misc.NotNull;
 import org.antlr.v4.runtime.misc.Nullable;
 
@@ -581,7 +587,7 @@ public class LexerATNSimulator extends ATNSimulator {
 		if ( dfa_debug ) {
 			System.out.format("no edge for %s\n", getTokenName(input.LA(1)));
 			System.out.format("ATN exec upon %s at DFA state %d = %s\n",
-							  input.substring(startIndex, input.index()), s.stateNumber, s.configset);
+							  input.getText(Interval.of(startIndex, input.index())), s.stateNumber, s.configset);
 		}
 
 		int ttype = execATN(input, s.configset, s);
@@ -713,7 +719,7 @@ public class LexerATNSimulator extends ATNSimulator {
 	/** Get the text of the current token */
 	@NotNull
 	public String getText(@NotNull CharStream input) {
-		return input.substring(this.startIndex, input.index());
+		return input.getText(Interval.of(startIndex, input.index()));
 	}
 
 	public int getLine() {
