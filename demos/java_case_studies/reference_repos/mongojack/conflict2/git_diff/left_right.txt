diff --git a/java_case_studies/reference_repos/mongojack/conflict2/left.java b/java_case_studies/reference_repos/mongojack/conflict2/right.java
index 1b5ef5d..d69a828 100644
--- a/java_case_studies/reference_repos/mongojack/conflict2/left.java
+++ b/java_case_studies/reference_repos/mongojack/conflict2/right.java
@@ -15,10 +15,6 @@
  */
 package org.mongojack;
 
-import com.fasterxml.jackson.databind.ObjectMapper;
-import com.mongodb.DB;
-import com.mongodb.DBCollection;
-import com.mongodb.Mongo;
 import java.util.HashSet;
 import java.util.Map;
 import java.util.Random;
@@ -28,6 +24,10 @@ import org.junit.After;
 import org.junit.Before;
 import org.junit.runner.RunWith;
 
+import com.mongodb.DB;
+import com.mongodb.DBCollection;
+import com.mongodb.Mongo;
+
 /**
  * Base class for unit tests that run against MongoDB. Assumes there is a MongoDB instance listening on the default
  * port on localhost, and that we can do whatever we want to a database called "unittest".
@@ -121,10 +121,6 @@ public abstract class MongoDBTestBase {
         return configure(JacksonDBCollection.wrap(getCollection(collectionName), type, keyType));
     }
 
-    protected <T, K> JacksonDBCollection<T, K> getCollection(Class<T> type, Class<K> keyType, ObjectMapper mapper) {
-        return configure(JacksonDBCollection.wrap(getCollection(), type, keyType, mapper));
-    }
-
     public void setUseStreamParser(boolean useStreamParser) {
         this.useStreamParser = useStreamParser;
     }
