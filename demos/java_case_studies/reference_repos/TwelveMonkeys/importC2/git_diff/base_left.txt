diff --git a/java_case_studies/reference_repos/TwelveMonkeys/importC2/base.java b/java_case_studies/reference_repos/TwelveMonkeys/importC2/left.java
index 5210151..df1a940 100644
--- a/java_case_studies/reference_repos/TwelveMonkeys/importC2/base.java
+++ b/java_case_studies/reference_repos/TwelveMonkeys/importC2/left.java
@@ -1,6 +1,5 @@
 package com.twelvemonkeys.servlet.image;
 
-import com.twelvemonkeys.image.BufferedImageIcon;
 import com.twelvemonkeys.image.ImageUtil;
 import com.twelvemonkeys.io.FileUtil;
 import com.twelvemonkeys.servlet.OutputStreamAdapter;
@@ -12,14 +11,12 @@ import javax.servlet.ServletContext;
 import javax.servlet.ServletOutputStream;
 import javax.servlet.http.HttpServletRequest;
 import javax.servlet.http.HttpServletResponse;
-import javax.swing.*;
 import java.awt.*;
 import java.awt.image.BufferedImage;
 import java.io.ByteArrayInputStream;
 import java.io.ByteArrayOutputStream;
 import java.io.IOException;
 import java.io.InputStream;
-import java.lang.reflect.InvocationTargetException;
 import java.util.Arrays;
 
 import static org.junit.Assert.*;
@@ -274,28 +271,6 @@ public class ImageServletResponseImplTestCase {
         verify(response).getOutputStream();
     }
 
-    private static void showIt(final BufferedImage expected, final BufferedImage actual, final BufferedImage diff) {
-        try {
-            SwingUtilities.invokeAndWait(new Runnable() {
-                public void run() {
-                    JPanel panel = new JPanel(new FlowLayout(FlowLayout.CENTER, 5, 0));
-                    panel.add(new BlackLabel("expected", expected));
-                    panel.add(new BlackLabel("actual", actual));
-                    if (diff != null) {
-                        panel.add(new BlackLabel("diff", diff));
-                    }
-                    JScrollPane scroll = new JScrollPane(panel);
-                    scroll.setBorder(BorderFactory.createEmptyBorder());
-                    JOptionPane.showMessageDialog(null, scroll);
-                }
-            });
-        }
-        catch (InterruptedException ignore) {
-        }
-        catch (InvocationTargetException ignore) {
-        }
-    }
-
     @Test
     public void testTranscodeResponseIndexedCM() throws IOException {
         // Custom setup
@@ -1078,337 +1053,4 @@ public class ImageServletResponseImplTestCase {
         verify(response).getOutputStream();
         verify(response).setContentType(CONTENT_TYPE_PNG);
     }
-
-    // -----------------------------------------------------------------------------------------------------------------
-    // Absolute AOI
-    // -----------------------------------------------------------------------------------------------------------------
-
-    @Test
-    public void testGetAOIAbsolute() {
-        assertEquals(new Rectangle(10, 10, 100, 100), ImageServletResponseImpl.getAOI(200, 200, 10, 10, 100, 100, false, false));
-    }
-
-    @Test
-    public void testGetAOIAbsoluteOverflowX() {
-        assertEquals(new Rectangle(10, 10, 90, 100), ImageServletResponseImpl.getAOI(100, 200, 10, 10, 100, 100, false, false));
-    }
-
-    @Test
-    public void testGetAOIAbsoluteOverflowW() {
-        assertEquals(new Rectangle(0, 10, 100, 100), ImageServletResponseImpl.getAOI(100, 200, 0, 10, 110, 100, false, false));
-    }
-
-    @Test
-    public void testGetAOIAbsoluteOverflowY() {
-        assertEquals(new Rectangle(10, 10, 100, 90), ImageServletResponseImpl.getAOI(200, 100, 10, 10, 100, 100, false, false));
-    }
-
-    @Test
-    public void testGetAOIAbsoluteOverflowH() {
-        assertEquals(new Rectangle(10, 0, 100, 100), ImageServletResponseImpl.getAOI(200, 100, 10, 0, 100, 110, false, false));
-    }
-
-    // -----------------------------------------------------------------------------------------------------------------
-    // Uniform AOI centered
-    // -----------------------------------------------------------------------------------------------------------------
-
-    @Test
-    public void testGetAOIUniformCenteredS2SUp() {
-        assertEquals(new Rectangle(0, 0, 100, 100), ImageServletResponseImpl.getAOI(100, 100, -1, -1, 333, 333, false, true));
-    }
-
-    @Test
-    public void testGetAOIUniformCenteredS2SDown() {
-        assertEquals(new Rectangle(0, 0, 100, 100), ImageServletResponseImpl.getAOI(100, 100, -1, -1, 33, 33, false, true));
-    }
-
-    @Test
-    public void testGetAOIUniformCenteredS2SNormalized() {
-        assertEquals(new Rectangle(0, 0, 100, 100), ImageServletResponseImpl.getAOI(100, 100, -1, -1, 100, 100, false, true));
-    }
-
-    @Test
-    public void testGetAOIUniformCenteredS2W() {
-        assertEquals(new Rectangle(0, 25, 100, 50), ImageServletResponseImpl.getAOI(100, 100, -1, -1, 200, 100, false, true));
-    }
-
-    @Test
-    public void testGetAOIUniformCenteredS2WNormalized() {
-        assertEquals(new Rectangle(0, 25, 100, 50), ImageServletResponseImpl.getAOI(100, 100, -1, -1, 100, 50, false, true));
-    }
-
-    @Test
-    public void testGetAOIUniformCenteredS2N() {
-        assertEquals(new Rectangle(25, 0, 50, 100), ImageServletResponseImpl.getAOI(100, 100, -1, -1, 100, 200, false, true));
-    }
-
-    @Test
-    public void testGetAOIUniformCenteredS2NNormalized() {
-        assertEquals(new Rectangle(25, 0, 50, 100), ImageServletResponseImpl.getAOI(100, 100, -1, -1, 50, 100, false, true));
-    }
-
-    @Test
-    public void testGetAOIUniformCenteredW2S() {
-        assertEquals(new Rectangle(50, 0, 100, 100), ImageServletResponseImpl.getAOI(200, 100, -1, -1, 333, 333, false, true));
-    }
-
-    @Test
-    public void testGetAOIUniformCenteredW2SNormalized() {
-        assertEquals(new Rectangle(50, 0, 100, 100), ImageServletResponseImpl.getAOI(200, 100, -1, -1, 100, 100, false, true));
-    }
-
-    @Test
-    public void testGetAOIUniformCenteredW2W() {
-        assertEquals(new Rectangle(0, 0, 200, 100), ImageServletResponseImpl.getAOI(200, 100, -1, -1, 100, 50, false, true));
-    }
-
-    @Test
-    public void testGetAOIUniformCenteredW2WW() {
-        assertEquals(new Rectangle(0, 25, 200, 50), ImageServletResponseImpl.getAOI(200, 100, -1, -1, 200, 50, false, true));
-    }
-
-    @Test
-    public void testGetAOIUniformCenteredW2WN() {
-        assertEquals(new Rectangle(25, 0, 150, 100), ImageServletResponseImpl.getAOI(200, 100, -1, -1, 75, 50, false, true));
-    }
-
-    @Test
-    public void testGetAOIUniformCenteredW2WNNormalized() {
-        assertEquals(new Rectangle(25, 0, 150, 100), ImageServletResponseImpl.getAOI(200, 100, -1, -1, 150, 100, false, true));
-    }
-
-    @Test
-    public void testGetAOIUniformCenteredW2WNormalized() {
-        assertEquals(new Rectangle(0, 0, 200, 100), ImageServletResponseImpl.getAOI(200, 100, -1, -1, 200, 100, false, true));
-    }
-
-    @Test
-    public void testGetAOIUniformCenteredW2N() {
-        assertEquals(new Rectangle(75, 0, 50, 100), ImageServletResponseImpl.getAOI(200, 100, -1, -1, 100, 200, false, true));
-    }
-
-    @Test
-    public void testGetAOIUniformCenteredW2NNormalized() {
-        assertEquals(new Rectangle(75, 0, 50, 100), ImageServletResponseImpl.getAOI(200, 100, -1, -1, 50, 100, false, true));
-    }
-
-    @Test
-    public void testGetAOIUniformCenteredN2S() {
-        assertEquals(new Rectangle(0, 50, 100, 100), ImageServletResponseImpl.getAOI(100, 200, -1, -1, 333, 333, false, true));
-    }
-
-    @Test
-    public void testGetAOIUniformCenteredN2SNormalized() {
-        assertEquals(new Rectangle(0, 50, 100, 100), ImageServletResponseImpl.getAOI(100, 200, -1, -1, 100, 100, false, true));
-    }
-
-    @Test
-    public void testGetAOIUniformCenteredN2W() {
-        assertEquals(new Rectangle(0, 75, 100, 50), ImageServletResponseImpl.getAOI(100, 200, -1, -1, 200, 100, false, true));
-    }
-
-    @Test
-    public void testGetAOIUniformCenteredN2WNormalized() {
-        assertEquals(new Rectangle(0, 75, 100, 50), ImageServletResponseImpl.getAOI(100, 200, -1, -1, 100, 50, false, true));
-    }
-
-    @Test
-    public void testGetAOIUniformCenteredN2N() {
-        assertEquals(new Rectangle(0, 0, 100, 200), ImageServletResponseImpl.getAOI(100, 200, -1, -1, 50, 100, false, true));
-    }
-
-    @Test
-    public void testGetAOIUniformCenteredN2NN() {
-        assertEquals(new Rectangle(25, 0, 50, 200), ImageServletResponseImpl.getAOI(100, 200, -1, -1, 25, 100, false, true));
-    }
-
-    @Test
-    public void testGetAOIUniformCenteredN2NW() {
-        assertEquals(new Rectangle(0, 33, 100, 133), ImageServletResponseImpl.getAOI(100, 200, -1, -1, 75, 100, false, true));
-    }
-
-    @Test
-    public void testGetAOIUniformCenteredN2NWNormalized() {
-        assertEquals(new Rectangle(0, 37, 100, 125), ImageServletResponseImpl.getAOI(100, 200, -1, -1, 100, 125, false, true));
-    }
-
-    @Test
-    public void testGetAOIUniformCenteredN2NNormalized() {
-        assertEquals(new Rectangle(0, 0, 100, 200), ImageServletResponseImpl.getAOI(100, 200, -1, -1, 100, 200, false, true));
-    }
-
-    // -----------------------------------------------------------------------------------------------------------------
-    // Absolute AOI centered
-    // -----------------------------------------------------------------------------------------------------------------
-
-    @Test
-    public void testGetAOICenteredS2SUp() {
-        assertEquals(new Rectangle(0, 0, 100, 100), ImageServletResponseImpl.getAOI(100, 100, -1, -1, 333, 333, false, false));
-    }
-
-    @Test
-    public void testGetAOICenteredS2SDown() {
-        assertEquals(new Rectangle(33, 33, 33, 33), ImageServletResponseImpl.getAOI(100, 100, -1, -1, 33, 33, false, false));
-    }
-
-    @Test
-    public void testGetAOICenteredS2SSame() {
-        assertEquals(new Rectangle(0, 0, 100, 100), ImageServletResponseImpl.getAOI(100, 100, -1, -1, 100, 100, false, false));
-    }
-
-    @Test
-    public void testGetAOICenteredS2WOverflow() {
-        assertEquals(new Rectangle(0, 0, 100, 100), ImageServletResponseImpl.getAOI(100, 100, -1, -1, 200, 100, false, false));
-    }
-
-    @Test
-    public void testGetAOICenteredS2W() {
-        assertEquals(new Rectangle(40, 45, 20, 10), ImageServletResponseImpl.getAOI(100, 100, -1, -1, 20, 10, false, false));
-    }
-
-    @Test
-    public void testGetAOICenteredS2WMax() {
-        assertEquals(new Rectangle(0, 25, 100, 50), ImageServletResponseImpl.getAOI(100, 100, -1, -1, 100, 50, false, false));
-    }
-
-    @Test
-    public void testGetAOICenteredS2NOverflow() {
-        assertEquals(new Rectangle(0, 0, 100, 100), ImageServletResponseImpl.getAOI(100, 100, -1, -1, 100, 200, false, false));
-    }
-
-    @Test
-    public void testGetAOICenteredS2N() {
-        assertEquals(new Rectangle(45, 40, 10, 20), ImageServletResponseImpl.getAOI(100, 100, -1, -1, 10, 20, false, false));
-    }
-
-    @Test
-    public void testGetAOICenteredS2NMax() {
-        assertEquals(new Rectangle(25, 0, 50, 100), ImageServletResponseImpl.getAOI(100, 100, -1, -1, 50, 100, false, false));
-    }
-
-    @Test
-    public void testGetAOICenteredW2SOverflow() {
-        assertEquals(new Rectangle(0, 0, 200, 100), ImageServletResponseImpl.getAOI(200, 100, -1, -1, 333, 333, false, false));
-    }
-
-    @Test
-    public void testGetAOICenteredW2S() {
-        assertEquals(new Rectangle(75, 25, 50, 50), ImageServletResponseImpl.getAOI(200, 100, -1, -1, 50, 50, false, false));
-    }
-
-    @Test
-    public void testGetAOICenteredW2SMax() {
-        assertEquals(new Rectangle(50, 0, 100, 100), ImageServletResponseImpl.getAOI(200, 100, -1, -1, 100, 100, false, false));
-    }
-
-    @Test
-    public void testGetAOICenteredW2WOverflow() {
-        assertEquals(new Rectangle(0, 0, 200, 100), ImageServletResponseImpl.getAOI(200, 100, -1, -1, 300, 200, false, false));
-    }
-
-    @Test
-    public void testGetAOICenteredW2W() {
-        assertEquals(new Rectangle(50, 25, 100, 50), ImageServletResponseImpl.getAOI(200, 100, -1, -1, 100, 50, false, false));
-    }
-
-    @Test
-    public void testGetAOICenteredW2WW() {
-        assertEquals(new Rectangle(10, 40, 180, 20), ImageServletResponseImpl.getAOI(200, 100, -1, -1, 180, 20, false, false));
-    }
-
-    @Test
-    public void testGetAOICenteredW2WN() {
-        assertEquals(new Rectangle(62, 25, 75, 50), ImageServletResponseImpl.getAOI(200, 100, -1, -1, 75, 50, false, false));
-    }
-
-    @Test
-    public void testGetAOICenteredW2WSame() {
-        assertEquals(new Rectangle(0, 0, 200, 100), ImageServletResponseImpl.getAOI(200, 100, -1, -1, 200, 100, false, false));
-    }
-
-    @Test
-    public void testGetAOICenteredW2NOverflow() {
-        assertEquals(new Rectangle(50, 0, 100, 100), ImageServletResponseImpl.getAOI(200, 100, -1, -1, 100, 200, false, false));
-    }
-
-    @Test
-    public void testGetAOICenteredW2N() {
-        assertEquals(new Rectangle(83, 25, 33, 50), ImageServletResponseImpl.getAOI(200, 100, -1, -1, 33, 50, false, false));
-    }
-
-    @Test
-    public void testGetAOICenteredW2NMax() {
-        assertEquals(new Rectangle(75, 0, 50, 100), ImageServletResponseImpl.getAOI(200, 100, -1, -1, 50, 100, false, false));
-    }
-
-    @Test
-    public void testGetAOICenteredN2S() {
-        assertEquals(new Rectangle(33, 83, 33, 33), ImageServletResponseImpl.getAOI(100, 200, -1, -1, 33, 33, false, false));
-    }
-
-    @Test
-    public void testGetAOICenteredN2SMax() {
-        assertEquals(new Rectangle(0, 50, 100, 100), ImageServletResponseImpl.getAOI(100, 200, -1, -1, 100, 100, false, false));
-    }
-
-    @Test
-    public void testGetAOICenteredN2WOverflow() {
-        assertEquals(new Rectangle(0, 50, 100, 100), ImageServletResponseImpl.getAOI(100, 200, -1, -1, 200, 100, false, false));
-    }
-
-    @Test
-    public void testGetAOICenteredN2W() {
-        assertEquals(new Rectangle(40, 95, 20, 10), ImageServletResponseImpl.getAOI(100, 200, -1, -1, 20, 10, false, false));
-    }
-
-    @Test
-    public void testGetAOICenteredN2WMax() {
-        assertEquals(new Rectangle(0, 75, 100, 50), ImageServletResponseImpl.getAOI(100, 200, -1, -1, 100, 50, false, false));
-    }
-
-    @Test
-    public void testGetAOICenteredN2N() {
-        assertEquals(new Rectangle(45, 90, 10, 20), ImageServletResponseImpl.getAOI(100, 200, -1, -1, 10, 20, false, false));
-    }
-
-    @Test
-    public void testGetAOICenteredN2NSame() {
-        assertEquals(new Rectangle(0, 0, 100, 200), ImageServletResponseImpl.getAOI(100, 200, -1, -1, 100, 200, false, false));
-    }
-
-    @Test
-    public void testGetAOICenteredN2NN() {
-        assertEquals(new Rectangle(37, 50, 25, 100), ImageServletResponseImpl.getAOI(100, 200, -1, -1, 25, 100, false, false));
-    }
-
-    @Test
-    public void testGetAOICenteredN2NW() {
-        assertEquals(new Rectangle(12, 50, 75, 100), ImageServletResponseImpl.getAOI(100, 200, -1, -1, 75, 100, false, false));
-    }
-
-    @Test
-    public void testGetAOICenteredN2NWMax() {
-        assertEquals(new Rectangle(0, 37, 100, 125), ImageServletResponseImpl.getAOI(100, 200, -1, -1, 100, 125, false, false));
-    }
-
-    @Test
-    public void testGetAOICenteredN2NMax() {
-        assertEquals(new Rectangle(0, 0, 100, 200), ImageServletResponseImpl.getAOI(100, 200, -1, -1, 100, 200, false, false));
-    }
-
-    // TODO: Test percent
-
-    // TODO: Test getSize()...
-
-    private static class BlackLabel extends JLabel {
-        public BlackLabel(final String text, final BufferedImage outImage) {
-            super(text, new BufferedImageIcon(outImage), JLabel.CENTER);
-            setOpaque(true);
-            setBackground(Color.BLACK);
-            setForeground(Color.WHITE);
-            setVerticalAlignment(JLabel.CENTER);
-            setVerticalTextPosition(JLabel.BOTTOM);
-            setHorizontalTextPosition(JLabel.CENTER);
-        }
-    }
 }
