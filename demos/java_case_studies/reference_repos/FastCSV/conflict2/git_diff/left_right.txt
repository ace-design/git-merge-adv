diff --git a/java_case_studies/reference_repos/FastCSV/conflict2/left.java b/java_case_studies/reference_repos/FastCSV/conflict2/right.java
index 2189696..b0e8dea 100644
--- a/java_case_studies/reference_repos/FastCSV/conflict2/left.java
+++ b/java_case_studies/reference_repos/FastCSV/conflict2/right.java
@@ -404,51 +404,6 @@ public final class CsvWriter implements Closeable {
             return build(path, StandardCharsets.UTF_8, openOptions);
         }
 
-        /**
-         * Constructs a {@link CsvWriter} for the specified Path.
-         *
-         * @param path        the path to write data to.
-         * @param openOptions options specifying how the file is opened.
-         *                    See {@link Files#newOutputStream(Path, OpenOption...)} for defaults.
-         * @return a new CsvWriter instance - never {@code null}. Don't forget to close it!
-         * @throws IOException          if a write error occurs
-         * @throws NullPointerException if path or charset is {@code null}
-         */
-        public CsvWriter build(final Path path, final OpenOption... openOptions)
-            throws IOException {
-            return build(path, StandardCharsets.UTF_8, openOptions);
-        }
-
-        /**
-         * Constructs a {@link CsvWriter} for the specified Path.
-         *
-         * @param path        the path to write data to.
-         * @param openOptions options specifying how the file is opened.
-         *                    See {@link Files#newOutputStream(Path, OpenOption...)} for defaults.
-         * @return a new CsvWriter instance - never {@code null}. Don't forget to close it!
-         * @throws IOException          if a write error occurs
-         * @throws NullPointerException if path or charset is {@code null}
-         */
-        public CsvWriter build(final Path path, final OpenOption... openOptions)
-            throws IOException {
-            return build(path, StandardCharsets.UTF_8, openOptions);
-        }
-
-        /**
-         * Constructs a {@link CsvWriter} for the specified Path.
-         *
-         * @param path        the path to write data to.
-         * @param openOptions options specifying how the file is opened.
-         *                    See {@link Files#newOutputStream(Path, OpenOption...)} for defaults.
-         * @return a new CsvWriter instance - never {@code null}. Don't forget to close it!
-         * @throws IOException          if a write error occurs
-         * @throws NullPointerException if path or charset is {@code null}
-         */
-        public CsvWriter build(final Path path, final OpenOption... openOptions)
-            throws IOException {
-            return build(path, StandardCharsets.UTF_8, openOptions);
-        }
-
         /**
          * Constructs a {@link CsvWriter} for the specified Path.
          *
