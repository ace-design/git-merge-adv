diff --git a/java_case_studies/reference_repos/maven/importC4/desired.java b/java_case_studies/demo_results/MethodUnion/maven-importC4.java
index 60a183c..5455087 100644
--- a/java_case_studies/reference_repos/maven/importC4/desired.java
+++ b/java_case_studies/demo_results/MethodUnion/maven-importC4.java
@@ -1,5 +1,4 @@
 package org.apache.maven.repository.internal;
-
 /*
  * Licensed to the Apache Software Foundation (ASF) under one
  * or more contributor license agreements.  See the NOTICE file
@@ -18,20 +17,14 @@ package org.apache.maven.repository.internal;
  * specific language governing permissions and limitations
  * under the License.
  */
-
 import java.util.ArrayList;
 import java.util.Collections;
-import java.util.HashMap;
 import java.util.LinkedHashMap;
 import java.util.LinkedHashSet;
 import java.util.List;
 import java.util.Map;
 import java.util.Properties;
 import java.util.Set;
-
-import javax.inject.Inject;
-import javax.inject.Named;
-
 import org.apache.maven.model.DependencyManagement;
 import org.apache.maven.model.DistributionManagement;
 import org.apache.maven.model.License;
@@ -45,74 +38,67 @@ import org.apache.maven.model.building.FileModelSource;
 import org.apache.maven.model.building.ModelBuilder;
 import org.apache.maven.model.building.ModelBuildingException;
 import org.apache.maven.model.building.ModelBuildingRequest;
+import java.util.HashMap;
 import org.apache.maven.model.building.ModelProblem;
 import org.apache.maven.model.resolution.UnresolvableModelException;
 import org.codehaus.plexus.component.annotations.Component;
 import org.codehaus.plexus.component.annotations.Requirement;
-import org.eclipse.aether.RepositoryException;
 import org.eclipse.aether.RepositoryEvent.EventType;
-import org.eclipse.aether.RepositoryEvent;
+import org.eclipse.aether.RepositoryException;
 import org.eclipse.aether.RepositorySystemSession;
+import javax.inject.Inject;
+import javax.inject.Named;
 import org.eclipse.aether.RequestTrace;
 import org.eclipse.aether.artifact.Artifact;
-import org.eclipse.aether.artifact.ArtifactProperties;
 import org.eclipse.aether.artifact.ArtifactType;
 import org.eclipse.aether.artifact.ArtifactTypeRegistry;
-import org.eclipse.aether.artifact.DefaultArtifact;
-import org.eclipse.aether.artifact.DefaultArtifactType;
 import org.eclipse.aether.graph.Dependency;
 import org.eclipse.aether.graph.Exclusion;
 import org.eclipse.aether.impl.ArtifactDescriptorReader;
 import org.eclipse.aether.impl.ArtifactResolver;
 import org.eclipse.aether.impl.RemoteRepositoryManager;
-import org.eclipse.aether.impl.RepositoryEventDispatcher;
 import org.eclipse.aether.impl.VersionResolver;
+import org.eclipse.aether.transfer.ArtifactNotFoundException;
+import org.eclipse.aether.artifact.ArtifactProperties;
+import org.eclipse.aether.artifact.DefaultArtifact;
+import org.eclipse.aether.artifact.DefaultArtifactType;
 import org.eclipse.aether.repository.WorkspaceRepository;
 import org.eclipse.aether.resolution.ArtifactDescriptorException;
-import org.eclipse.aether.resolution.ArtifactDescriptorPolicy;
-import org.eclipse.aether.resolution.ArtifactDescriptorPolicyRequest;
 import org.eclipse.aether.resolution.ArtifactDescriptorRequest;
 import org.eclipse.aether.resolution.ArtifactDescriptorResult;
 import org.eclipse.aether.resolution.ArtifactRequest;
 import org.eclipse.aether.resolution.ArtifactResolutionException;
+import org.eclipse.aether.RepositoryEvent;
 import org.eclipse.aether.resolution.ArtifactResult;
 import org.eclipse.aether.resolution.VersionRequest;
 import org.eclipse.aether.resolution.VersionResolutionException;
 import org.eclipse.aether.resolution.VersionResult;
 import org.eclipse.aether.spi.locator.Service;
+import org.sonatype.aether.impl.RepositoryEventDispatcher;
 import org.eclipse.aether.spi.locator.ServiceLocator;
 import org.eclipse.aether.spi.log.Logger;
+import org.eclipse.aether.resolution.ArtifactDescriptorPolicy;
+import org.eclipse.aether.resolution.ArtifactDescriptorPolicyRequest;
 import org.eclipse.aether.spi.log.LoggerFactory;
 import org.eclipse.aether.spi.log.NullLoggerFactory;
-import org.eclipse.aether.transfer.ArtifactNotFoundException;
 
-/**
- * @author Benjamin Bentmann
- */
 @Named
 @Component( role = ArtifactDescriptorReader.class )
-public class DefaultArtifactDescriptorReader
-    implements ArtifactDescriptorReader, Service
-{
+public class DefaultArtifactDescriptorReader implements ArtifactDescriptorReader, Service{
 
     @SuppressWarnings( "unused" )
     @Requirement( role = LoggerFactory.class )
-    private Logger logger = NullLoggerFactory.LOGGER;
-
+    private Logger logger = NullLoggerFactory.LOGGER;,
     @Requirement
-    private RemoteRepositoryManager remoteRepositoryManager;
-
+    private RemoteRepositoryManager remoteRepositoryManager;,
     @Requirement
-    private VersionResolver versionResolver;
-
+    private VersionResolver versionResolver;,
     @Requirement
-    private ArtifactResolver artifactResolver;
-
+    private ArtifactResolver artifactResolver;,
     @Requirement
-    private RepositoryEventDispatcher repositoryEventDispatcher;
-
+    private RepositoryEventDispatcher repositoryEventDispatcher;,
     @Requirement
-    private ModelBuilder modelBuilder;
+    private ModelBuilder modelBuilder;,
 
     public DefaultArtifactDescriptorReader()
     {
@@ -500,4 +486,4 @@ public class DefaultArtifactDescriptorReader
         return policy.getPolicy( session, new ArtifactDescriptorPolicyRequest( artifact, request.getRequestContext() ) );
     }
 
-}
+}
\ No newline at end of file
