diff --git a/java_case_studies/reference_repos/openshift-java-client/conflict10/desired.java b/java_case_studies/reference_repos/openshift-java-client/conflict10/spork_result.java
index 28bfddc..c7ac97d 100644
--- a/java_case_studies/reference_repos/openshift-java-client/conflict10/desired.java
+++ b/java_case_studies/reference_repos/openshift-java-client/conflict10/spork_result.java
@@ -10,33 +10,39 @@
  ******************************************************************************/
 package com.openshift.internal.client.httpclient;
 
+import com.openshift.client.IHttpClient;
+import com.openshift.internal.client.RequestParameter;
+import com.openshift.internal.client.utils.StringUtils;
 import java.io.IOException;
 import java.io.OutputStream;
 import java.net.URLEncoder;
-import java.text.MessageFormat;
 import java.util.List;
-import java.util.Map;
 
-import com.openshift.client.IHttpClient;
-import com.openshift.internal.client.RequestParameter;
-import com.openshift.internal.client.utils.StringUtils;
 
 /**
  * @author Andre Dietisheim
  */
 public class FormUrlEncodedMediaType implements IMediaType {
-
 	private static final String UTF8 = "UTF-8";
 
+	private static final char ARRAY_START = '[';
+
+	private static final char ARRAY_STOP = ']';
+
 	@Override
 	public String getType() {
 		return IHttpClient.MEDIATYPE_APPLICATION_FORMURLENCODED;
 	}
 
 	@Override
-	public void write(RequestParameter[] parameters, OutputStream out) throws IOException {
-		if (parameters == null
-				|| parameters.length == 0) {
+	public void write(RequestParameter[] parameters, OutputStream out) throws 
+<<<<<<< LEFT
+IOException
+=======
+EncodingException
+>>>>>>> RIGHT
+	 {
+		if ((parameters == null) || (parameters.length == 0)) {
 			return;
 		}
 		for (RequestParameter parameter : parameters) {
@@ -47,13 +53,9 @@ public class FormUrlEncodedMediaType implements IMediaType {
 
 	@Override
 	public void write(String name, String value, OutputStream out) throws IOException {
-		writeSimpleParameterName(name, out);
-		out.write(URLEncoder.encode(value, UTF8).getBytes());
-	}
-
-	private void writeSimpleParameterName(String name, OutputStream out) throws IOException {
 		out.write(name.getBytes());
 		out.write(IHttpClient.EQUALS);
+		out.write(URLEncoder.encode(value, UTF8).getBytes());
 	}
 
 	@Override
@@ -69,32 +71,11 @@ public class FormUrlEncodedMediaType implements IMediaType {
 			if (firstValueWritten) {
 				out.write(IHttpClient.AMPERSAND);
 			}
-			out.write(
-					MessageFormat.format("{0}[]={1}",
-							name,
-							URLEncoder.encode(value, UTF8).getBytes())
-							.getBytes());
-			firstValueWritten = true;
-		}
-	}
-
-	@Override
-	public void write(String name, Map<String, String> values, OutputStream out) throws IOException {
-		/**
-		 * <name>[][<key>]=<value>&<name>[<key>]=<value>
-		 */
-		boolean firstValueWritten = false;
-		for (Map.Entry<String, String> entry: values.entrySet()) {
-			if (StringUtils.isEmpty(entry.getValue())) {
-				continue;
-			}
-			if (firstValueWritten) {
-				out.write(IHttpClient.AMPERSAND);
-			}
-			out.write(MessageFormat.format("{0}[][{1}]={2}",
-					name,
-					entry.getKey(),
-					URLEncoder.encode(entry.getValue(), UTF8).getBytes()).getBytes());
+			out.write(name.getBytes());
+			out.write(ARRAY_START);
+			out.write(ARRAY_STOP);
+			out.write(IHttpClient.EQUALS);
+			out.write(URLEncoder.encode(value, UTF8).getBytes());
 			firstValueWritten = true;
 		}
 	}
