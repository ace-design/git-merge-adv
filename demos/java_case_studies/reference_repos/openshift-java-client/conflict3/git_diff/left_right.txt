diff --git a/java_case_studies/reference_repos/openshift-java-client/conflict3/left.java b/java_case_studies/reference_repos/openshift-java-client/conflict3/right.java
index 65f03cd..daa99da 100644
--- a/java_case_studies/reference_repos/openshift-java-client/conflict3/left.java
+++ b/java_case_studies/reference_repos/openshift-java-client/conflict3/right.java
@@ -24,8 +24,11 @@ import java.util.List;
 import java.util.regex.Matcher;
 import java.util.regex.Pattern;
 
+import javax.xml.datatype.DatatypeConfigurationException;
+
 import org.fest.assertions.AssertExtension;
 
+import com.openshift.client.ApplicationScale;
 import com.openshift.client.IApplication;
 import com.openshift.client.IDomain;
 import com.openshift.client.IField;
@@ -77,8 +80,8 @@ public class ApplicationAssert implements AssertExtension {
 		return this;
 	}
 
-	public ApplicationAssert hasCreationTime(String creationTime) {
-		assertEquals(creationTime, application.getCreationTime());
+	public ApplicationAssert hasCreationTime(String creationTime) throws DatatypeConfigurationException {
+		assertEquals(RFC822DateUtils.getDate(creationTime), application.getCreationTime());
 		return this;
 	}
 
@@ -145,7 +148,12 @@ public class ApplicationAssert implements AssertExtension {
 		assertThat(application.getGearProfile()).isEqualTo(gearProfile);
 		return this;
 	}
-
+	
+	public ApplicationAssert hasApplicationScale(ApplicationScale applicationScale) {
+		assertThat(application.getApplicationScale()).isEqualTo(applicationScale);
+		return this;
+	}
+	
 	public ApplicationAssert hasEmbeddedCartridges(LatestEmbeddableCartridge... selectors)
 			throws OpenShiftException {
 		for (LatestEmbeddableCartridge selector : selectors) {
@@ -156,27 +164,13 @@ public class ApplicationAssert implements AssertExtension {
 
 	public ApplicationAssert hasEmbeddedCartridge(LatestEmbeddableCartridge selector)
 			throws OpenShiftException {
-		hasEmbeddedCartridge(selector.get(application));
-		return this;
-	}
-
-	public ApplicationAssert hasEmbeddedCartridge(IEmbeddableCartridge... cartridges)
-			throws OpenShiftException {
-		for (IEmbeddableCartridge cartridge : cartridges) {
-			hasEmbeddedCartridge(cartridge);
-		}
-		
-		return this;
-	}
-
-	public ApplicationAssert hasEmbeddedCartridge(IEmbeddableCartridge cartridge)
-			throws OpenShiftException {
-		assertTrue(application.hasEmbeddedCartridge(cartridge));
+		IEmbeddableCartridge embeddableCartridge = selector.get(application);
+		assertTrue(application.hasEmbeddedCartridge(embeddableCartridge));
 
 		return this;
 	}
 
-	public ApplicationAssert hasEmbeddedCartridgeNames(String... embeddableCartridgeNames) throws OpenShiftException {
+	public ApplicationAssert hasEmbeddableCartridges(String... embeddableCartridgeNames) throws OpenShiftException {
 		if (embeddableCartridgeNames.length == 0) {
 			assertEquals(0, application.getEmbeddedCartridges().size());
 		}
@@ -194,7 +188,7 @@ public class ApplicationAssert implements AssertExtension {
 		return this;
 	}
 	
-	public ApplicationAssert hasNotEmbeddableCartridgeNames(String... embeddableCartridgeNames) throws OpenShiftException {		
+	public ApplicationAssert hasNotEmbeddableCartridges(String... embeddableCartridgeNames) throws OpenShiftException {		
 		for (String cartridgeName : embeddableCartridgeNames) {
 			assertFalse(application.hasEmbeddedCartridge(cartridgeName));
 		}
@@ -222,22 +216,25 @@ public class ApplicationAssert implements AssertExtension {
 		return this;
 	}
 
-	public void hasNotEmbeddableCartridge(LatestEmbeddableCartridge constraint) {
+	public ApplicationAssert hasNotEmbeddableCartridge(LatestEmbeddableCartridge constraint) {
 		hasNotEmbeddableCartridge(constraint.get(application));
+		return this;
 	}
 
-	public void hasNotEmbeddableCartridge(IEmbeddableCartridge cartridge) {
+	public ApplicationAssert hasNotEmbeddableCartridge(IEmbeddableCartridge cartridge) {
 		hasNotEmbeddableCartridge(cartridge.getName());
+		return this;
 	}
 
 	public void hasNotEmbeddableCartridge(String name) {
 		assertNull(getEmbeddableCartridge(name));
 	}
 
-	public void assertThatDoesntContainCartridges(Collection<IEmbeddableCartridge> shouldNotBeContained, List<IEmbeddedCartridge> cartridges) {
+	public ApplicationAssert assertThatDoesntContainCartridges(Collection<IEmbeddableCartridge> shouldNotBeContained, List<IEmbeddedCartridge> cartridges) {
 		for(IEmbeddableCartridge shouldNot : shouldNotBeContained) {
 			assertFalse(cartridges.contains(shouldNot));
 		}
+		return this;
 	}
 
 	private IEmbeddedCartridge getEmbeddableCartridge(String name) {
@@ -251,10 +248,16 @@ public class ApplicationAssert implements AssertExtension {
 		return matchingCartridge;
 	}
 
-	public void assertThatContainsCartridges(Collection<IEmbeddableCartridge> shouldBeContained, List<IEmbeddedCartridge> cartridgesToCheck) {
+	public ApplicationAssert assertThatContainsCartridges(Collection<IEmbeddableCartridge> shouldBeContained, List<IEmbeddedCartridge> cartridgesToCheck) {
 		for (IEmbeddableCartridge cartridge : shouldBeContained) {
 			assertTrue(cartridgesToCheck.contains(cartridge));
 		}
+		return this;
+	}
+	
+	public ApplicationAssert hasDomain(IDomain domain) {
+		assertThat(application.getDomain()).isEqualTo(domain);
+		return this;
 	}
 	
 	public ApplicationAssert hasContent(String page, String contains) throws IOException {
@@ -292,10 +295,4 @@ public class ApplicationAssert implements AssertExtension {
 		}
 		return this;
 	}
-
-	public ApplicationAssert hasDomain(IDomain domain) {
-		assertThat(application.getDomain()).isEqualTo(domain);
-		return this;
-	}
-
 }
