diff --git a/java_case_studies/reference_repos/alternator/conflict2/desired.java b/java_case_studies/reference_repos/alternator/conflict2/spork_result.java
index 04dfe3d..d149597 100644
--- a/java_case_studies/reference_repos/alternator/conflict2/desired.java
+++ b/java_case_studies/reference_repos/alternator/conflict2/spork_result.java
@@ -451,38 +451,57 @@ class AlternatorDBHandler {
                         throw new ResourceNotFoundException("There must be a comparisonOperator");
                     }
                     if (cond.getComparisonOperator().equals("EQ")) {
+<<<<<<< LEFT
                         if (cond.getAttributeValueList().size() == 1) {
                             EQHandle(items, item, cond.getAttributeValueList().get(0), k);
                         }
                         else {
                             //TODO: throw Exception
                         }
+=======
+                        EQHandle(items, item, cond, k);
+>>>>>>> RIGHT
                     }
                     if (cond.getComparisonOperator().equals("LE")) {
+<<<<<<< LEFT
                         if (cond.getAttributeValueList().size() == 1) {
                             LEHandle(items, item, cond.getAttributeValueList().get(0), k);
                         }
                         else {
                             //TODO: throw Exception
                         }
+=======
+                        EQHandle(items, item, cond, k);
+                        LTHandle(items, item, cond, k);
+>>>>>>> RIGHT
                     }
                     if (cond.getComparisonOperator().equals("LT")) {
+<<<<<<< LEFT
                         if (cond.getAttributeValueList().size() == 1) {
                             LTHandle(items, item, cond.getAttributeValueList().get(0), k);
                         }
                         else {
                             //TODO: throw Exception
                         }
+=======
+                        LTHandle(items, item, cond, k);
+>>>>>>> RIGHT
                     }
                     if (cond.getComparisonOperator().equals("GE")) {
+<<<<<<< LEFT
                         if (cond.getAttributeValueList().size() == 1) {
                             GEHandle(items, item, cond.getAttributeValueList().get(0), k);
                         }
                         else {
                             //TODO: throw Exception
                         }
+=======
+                        EQHandle(items, item, cond, k);
+                        GTHandle(items, item, cond, k);
+>>>>>>> RIGHT
                     }
                     if (cond.getComparisonOperator().equals("GT")) {
+<<<<<<< LEFT
                         if (cond.getAttributeValueList().size() == 1) {
                             GTHandle(items, item, cond.getAttributeValueList().get(0), k);
                         }
@@ -502,6 +521,9 @@ class AlternatorDBHandler {
                         for (AttributeValue attrivuteValue : cond.getAttributeValueList()) {
                             EQHandle(items, item, attrivuteValue, k);
                         }
+=======
+                        GTHandle(items, item, cond, k);
+>>>>>>> RIGHT
                     }
                 }
             } else {
@@ -727,6 +749,7 @@ class AlternatorDBHandler {
         return result;
     }
 
+<<<<<<< LEFT
     private void EQHandle (List<Map<String, AttributeValue>> items, Map<String, AttributeValue> item, AttributeValue attributeValue, String k) {
         if (item.get(k).equals(attributeValue)) {
              items.add(item);
@@ -810,6 +833,68 @@ class AlternatorDBHandler {
         } else {
             //TODO to do
             //List<String> value = (getAttributeValueType(item.get(k)).equals(AttributeValueType.SS))? item.get(k).getSS() : item.get(k).getNS();
+=======
+    private void EQHandle (List<Map<String, AttributeValue>> items, Map<String, AttributeValue> item, Condition cond, String k) {
+        if (cond.getAttributeValueList().size() == 1) {
+            if (item.get(k).equals(cond.getAttributeValueList().get(0))) {
+                items.add(item);
+            }
+        } else {
+            if (item.get(k).equals(cond.getAttributeValueList())) {
+                items.add(item);
+            }
+        }
+    }
+
+    private void GTHandle (List<Map<String, AttributeValue>> items, Map<String, AttributeValue> item, Condition cond, String k) {
+        if (cond.getAttributeValueList().size() == 1) {
+            if (getAttributeValueType(item.get(k)).equals(AttributeValueType.S) || getAttributeValueType(item.get(k)).equals(AttributeValueType.N)) {
+                if (getAttributeValueType(item.get(k)).equals(AttributeValueType.S)) {
+                    String value = (getAttributeValueType(item.get(k)).equals(AttributeValueType.S)) ? item.get(k).getS() : item.get(k).getN();
+                    String comp = (getAttributeValueType(cond.getAttributeValueList().get(0)).equals(AttributeValueType.S)) ? cond.getAttributeValueList().get(0).getS() : cond.getAttributeValueList().get(0).getN();
+                    if (value.compareTo(comp) > 0) {
+                        items.add(item);
+                    }
+                }
+                else {
+                    String value = (getAttributeValueType(item.get(k)).equals(AttributeValueType.S)) ? item.get(k).getS() : item.get(k).getN();
+                    String comp = (getAttributeValueType(cond.getAttributeValueList().get(0)).equals(AttributeValueType.S)) ? cond.getAttributeValueList().get(0).getS() : cond.getAttributeValueList().get(0).getN();
+                    if  (Integer.parseInt(value)>Integer.parseInt(comp)) {
+                        items.add(item);
+                    }
+                }
+            } else {
+                //TODO to do
+                //List<String> value = (getAttributeValueType(item.get(k)).equals(AttributeValueType.SS))? item.get(k).getSS() : item.get(k).getNS();
+            }
+
+        } else {
+            //TODO to do
+            if (item.get(k).equals(cond.getAttributeValueList())) {
+                items.add(item);
+            }
+        }
+    }
+
+    private void LTHandle (List<Map<String, AttributeValue>> items, Map<String, AttributeValue> item, Condition cond, String k) {
+        if (cond.getAttributeValueList().size() == 1) {
+            if (getAttributeValueType(item.get(k)).equals(AttributeValueType.S) || getAttributeValueType(item.get(k)).equals(AttributeValueType.N)) {
+                String value = (getAttributeValueType(item.get(k)).equals(AttributeValueType.S)) ? item.get(k).getS() : item.get(k).getN();
+                String comp = (getAttributeValueType(cond.getAttributeValueList().get(0)).equals(AttributeValueType.S)) ? cond.getAttributeValueList().get(0).getS() : cond.getAttributeValueList().get(0).getN();
+                if (value.compareTo(comp) < 0) {
+                    items.add(item);
+                }
+            } else {
+                //TODO to do
+                //List<String> value = (getAttributeValueType(item.get(k)).equals(AttributeValueType.SS))? item.get(k).getSS() : item.get(k).getNS();
+            }
+
+        } else {
+            //TODO to do
+            if (item.get(k).equals(cond.getAttributeValueList())) {
+                items.add(item);
+            }
+>>>>>>> RIGHT
         }
     }
 }
