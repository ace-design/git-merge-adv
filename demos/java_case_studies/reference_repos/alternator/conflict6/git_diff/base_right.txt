diff --git a/java_case_studies/reference_repos/alternator/conflict6/base.java b/java_case_studies/reference_repos/alternator/conflict6/right.java
index affeaae..a2f8963 100644
--- a/java_case_studies/reference_repos/alternator/conflict6/base.java
+++ b/java_case_studies/reference_repos/alternator/conflict6/right.java
@@ -2,11 +2,14 @@ package com.amazonaws.services.dynamodb.model.transform;
 
 
 import com.amazonaws.AmazonClientException;
-import com.amazonaws.services.dynamodb.model.*;
+import com.amazonaws.services.dynamodb.model.AttributeValue;
+import com.amazonaws.services.dynamodb.model.BatchGetItemResult;
+import com.amazonaws.services.dynamodb.model.BatchResponse;
 import com.amazonaws.transform.Marshaller;
 import com.amazonaws.util.json.JSONWriter;
 
 import java.io.StringWriter;
+import java.util.List;
 import java.util.Map;
 
 public class BatchGetItemResultMarshaller implements Marshaller<String, BatchGetItemResult> {
@@ -19,18 +22,32 @@ public class BatchGetItemResultMarshaller implements Marshaller<String, BatchGet
 		try {
 			StringWriter stringWriter = new StringWriter();
 			JSONWriter jsonWriter = new JSONWriter(stringWriter);
+
+            //Begin whole object containing both response and unprocessed keys!
 			jsonWriter.object();
+
+            //Begin response object
 			jsonWriter.key("Responses").object();
 
-			Map<String, BatchResponse> responses = batchGetItemResult.getResponses();
+            Map<String, BatchResponse> responses = batchGetItemResult.getResponses();
+
 			if (responses != null) {
 				for (String tableKey : responses.keySet()) {
+
+                    //Begin each table object
 					jsonWriter.key(tableKey).object();
-					if (responses.get(tableKey).getItems() != null) {
+                    List<Map<String, AttributeValue>> items = responses.get(tableKey).getItems();
+					if (items != null) {
+
+                        //Begin array items (a series of items)
 						jsonWriter.key("Items").array();
-						for (Map<String, AttributeValue> item : responses.get(tableKey).getItems()) {
+						for (Map<String, AttributeValue> item : items) {
+
+                            //Begin each objects constituting array items.No keys in these objects
 							jsonWriter.object();
 							for (String itemKey : item.keySet()) {
+
+                                //Begin attribute of each item
 								jsonWriter.key(itemKey).object();
 								AttributeValue value = item.get(itemKey);
 								if (value.getN() != null) {
@@ -42,20 +59,25 @@ public class BatchGetItemResultMarshaller implements Marshaller<String, BatchGet
 								} else if (value.getSS() != null) {
 									jsonWriter.key("SS").value(value.getSS());
 								}
+                                //End attribute of each item
 								jsonWriter.endObject();
 							}
-
+                            //End each objects constituting array items.No keys in these objects
 							jsonWriter.endObject();
 						}
+                        //End array items (a series of items)
 						jsonWriter.endArray();
+
 						jsonWriter.key("ConsumedCapacityUnits").value(1);
 					}
+                    //End each table object
 					jsonWriter.endObject();
 				}
 
 			}
-			jsonWriter.key("UnprocessedKeys").value("");
+            //End response object
 			jsonWriter.endObject();
+            //End whole object containing both response and unprocessed keys!
 			jsonWriter.endObject();
 
 			return stringWriter.toString();
