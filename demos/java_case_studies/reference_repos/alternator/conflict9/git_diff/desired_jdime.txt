diff --git a/java_case_studies/reference_repos/alternator/conflict9/desired.java b/java_case_studies/reference_repos/alternator/conflict9/jdime.java
index 6b04710..b200f36 100644
--- a/java_case_studies/reference_repos/alternator/conflict9/desired.java
+++ b/java_case_studies/reference_repos/alternator/conflict9/jdime.java
@@ -1,142 +1,88 @@
 package com.michelboudreau.alternator;
-
+import com.amazonaws.*;
 import org.apache.commons.logging.Log;
-import org.apache.commons.logging.LogFactory;
-
-import com.amazonaws.AmazonClientException;
-import com.amazonaws.AmazonServiceException;
-import com.amazonaws.AmazonWebServiceClient;
-import com.amazonaws.AmazonWebServiceRequest;
-import com.amazonaws.ClientConfiguration;
-import com.amazonaws.ResponseMetadata;
 import com.amazonaws.services.dynamodb.AmazonDynamoDB;
-import com.amazonaws.services.dynamodb.model.BatchGetItemRequest;
-import com.amazonaws.services.dynamodb.model.BatchGetItemResult;
-import com.amazonaws.services.dynamodb.model.BatchWriteItemRequest;
-import com.amazonaws.services.dynamodb.model.BatchWriteItemResult;
-import com.amazonaws.services.dynamodb.model.CreateTableRequest;
-import com.amazonaws.services.dynamodb.model.CreateTableResult;
-import com.amazonaws.services.dynamodb.model.DeleteItemRequest;
-import com.amazonaws.services.dynamodb.model.DeleteItemResult;
-import com.amazonaws.services.dynamodb.model.DeleteTableRequest;
-import com.amazonaws.services.dynamodb.model.DeleteTableResult;
-import com.amazonaws.services.dynamodb.model.DescribeTableRequest;
-import com.amazonaws.services.dynamodb.model.DescribeTableResult;
-import com.amazonaws.services.dynamodb.model.GetItemRequest;
-import com.amazonaws.services.dynamodb.model.GetItemResult;
-import com.amazonaws.services.dynamodb.model.ListTablesRequest;
-import com.amazonaws.services.dynamodb.model.ListTablesResult;
-import com.amazonaws.services.dynamodb.model.PutItemRequest;
-import com.amazonaws.services.dynamodb.model.PutItemResult;
-import com.amazonaws.services.dynamodb.model.QueryRequest;
-import com.amazonaws.services.dynamodb.model.QueryResult;
-import com.amazonaws.services.dynamodb.model.ScanRequest;
-import com.amazonaws.services.dynamodb.model.ScanResult;
-import com.amazonaws.services.dynamodb.model.UpdateItemRequest;
-import com.amazonaws.services.dynamodb.model.UpdateItemResult;
-import com.amazonaws.services.dynamodb.model.UpdateTableRequest;
-import com.amazonaws.services.dynamodb.model.UpdateTableResult;
+import com.amazonaws.services.dynamodb.model.*;
+import org.apache.commons.logging.LogFactory;
 
 public class AlternatorDBInProcessClient extends AmazonWebServiceClient implements AmazonDynamoDB {
-	private static final Log log = LogFactory.getLog(AlternatorDBInProcessClient.class);
-
-	private AlternatorDBHandler handler = new AlternatorDBHandler();
-
-	public AlternatorDBInProcessClient() {
-		this(new ClientConfiguration());
-	}
-
-	public AlternatorDBInProcessClient(ClientConfiguration clientConfiguration) {
-		super(clientConfiguration);
-		init();
-	}
-
-	private void init() {
-	}
-
-	public ListTablesResult listTables(ListTablesRequest listTablesRequest)
-			throws AmazonServiceException, AmazonClientException {
-		return handler.listTables(listTablesRequest);
-	}
-
-	public QueryResult query(QueryRequest queryRequest)
-			throws AmazonServiceException, AmazonClientException {
-		return handler.query(queryRequest);
-	}
-
-	public BatchWriteItemResult batchWriteItem(BatchWriteItemRequest batchWriteItemRequest)
-			throws AmazonServiceException, AmazonClientException {
-		return handler.batchWriteItem(batchWriteItemRequest);
-	}
+  private static final Log log = LogFactory.getLog(AlternatorDBInProcessClient.class);
 
-	public UpdateItemResult updateItem(UpdateItemRequest updateItemRequest)
-			throws AmazonServiceException, AmazonClientException {
+  private AlternatorDBHandler handler = new AlternatorDBHandler();
 
-            return handler.updateItem(updateItemRequest);
-	}
+  public AlternatorDBInProcessClient() {
+    this(new ClientConfiguration());
+  }
 
-	public PutItemResult putItem(PutItemRequest putItemRequest)
-			throws AmazonServiceException, AmazonClientException {
+  public AlternatorDBInProcessClient(ClientConfiguration clientConfiguration) {
+    super(clientConfiguration);
+    init();
+  }
 
-            return handler.putItem(putItemRequest);
-}
+  private void init() {
+  }
 
-	public DescribeTableResult describeTable(DescribeTableRequest describeTableRequest)
-			throws AmazonServiceException, AmazonClientException {
-		return handler.describeTable(describeTableRequest);
-	}
+  public ListTablesResult listTables(ListTablesRequest listTablesRequest) throws AmazonServiceException, AmazonClientException {
+    return handler.listTables(listTablesRequest);
+  }
 
-	public ScanResult scan(ScanRequest scanRequest)
-			throws AmazonServiceException, AmazonClientException {
-		return handler.scan(scanRequest);
-	}
+  public QueryResult query(QueryRequest queryRequest) throws AmazonServiceException, AmazonClientException {
+    return handler.query(queryRequest);
+  }
 
-	public CreateTableResult createTable(CreateTableRequest createTableRequest)
-			throws AmazonServiceException, AmazonClientException {
+  public BatchWriteItemResult batchWriteItem(BatchWriteItemRequest batchWriteItemRequest) throws AmazonServiceException, AmazonClientException {
+    return handler.batchWriteItem(batchWriteItemRequest);
+  }
 
-            return handler.createTable(createTableRequest);
-	}
+  public UpdateItemResult updateItem(UpdateItemRequest updateItemRequest) throws AmazonServiceException, AmazonClientException {
+    return handler.updateItem(updateItemRequest);
+  }
 
-	public UpdateTableResult updateTable(UpdateTableRequest updateTableRequest)
-			throws AmazonServiceException, AmazonClientException {
+  public PutItemResult putItem(PutItemRequest putItemRequest) throws AmazonServiceException, AmazonClientException, ConditionalCheckFailedException {
+    return handler.putItem(putItemRequest);
+  }
 
-            return handler.updateTable(updateTableRequest);
-	}
+  public DescribeTableResult describeTable(DescribeTableRequest describeTableRequest) throws AmazonServiceException, AmazonClientException {
+    return handler.describeTable(describeTableRequest);
+  }
 
-	public DeleteTableResult deleteTable(DeleteTableRequest deleteTableRequest)
-			throws AmazonServiceException, AmazonClientException {
+  public ScanResult scan(ScanRequest scanRequest) throws AmazonServiceException, AmazonClientException {
+    return handler.scan(scanRequest);
+  }
 
-            return handler.deleteTable(deleteTableRequest);
-	}
+  public CreateTableResult createTable(CreateTableRequest createTableRequest) throws AmazonServiceException, AmazonClientException {
+    return handler.createTable(createTableRequest);
+  }
 
-	public DeleteItemResult deleteItem(DeleteItemRequest deleteItemRequest)
-			throws AmazonServiceException, AmazonClientException {
+  public UpdateTableResult updateTable(UpdateTableRequest updateTableRequest) throws AmazonServiceException, AmazonClientException {
+    return handler.updateTable(updateTableRequest);
+  }
 
-            return handler.deleteItem(deleteItemRequest);
-    }
+  public DeleteTableResult deleteTable(DeleteTableRequest deleteTableRequest) throws AmazonServiceException, AmazonClientException {
+    return handler.deleteTable(deleteTableRequest);
+  }
 
-	public GetItemResult getItem(GetItemRequest getItemRequest)
-			throws AmazonServiceException, AmazonClientException {
+  public DeleteItemResult deleteItem(DeleteItemRequest deleteItemRequest) throws AmazonServiceException, AmazonClientException {
+    return handler.deleteItem(deleteItemRequest);
+  }
 
-            return handler.getItem(getItemRequest);
-	}
+  public GetItemResult getItem(GetItemRequest getItemRequest) throws AmazonServiceException, AmazonClientException {
+    return handler.getItem(getItemRequest);
+  }
 
-	public BatchGetItemResult batchGetItem(BatchGetItemRequest batchGetItemRequest)
-			throws AmazonServiceException, AmazonClientException {
-		return handler.batchGetItem(batchGetItemRequest);
-	}
+  public BatchGetItemResult batchGetItem(BatchGetItemRequest batchGetItemRequest) throws AmazonServiceException, AmazonClientException {
+    return handler.batchGetItem(batchGetItemRequest);
+  }
 
-	public ListTablesResult listTables() throws AmazonServiceException, AmazonClientException {
-		return listTables(new ListTablesRequest());
-	}
+  public ListTablesResult listTables() throws AmazonServiceException, AmazonClientException {
+    return listTables(new ListTablesRequest());
+  }
 
-	@Override
-	public void setEndpoint(String endpoint) throws IllegalArgumentException {
-		super.setEndpoint(endpoint);
-	}
+  @Override public void setEndpoint(String endpoint) throws IllegalArgumentException {
+    super.setEndpoint(endpoint);
+  }
 
-	@Override
-	public ResponseMetadata getCachedResponseMetadata(AmazonWebServiceRequest request) {
-		return client.getResponseMetadataForRequest(request);
-	}
-}
+  @Override public ResponseMetadata getCachedResponseMetadata(AmazonWebServiceRequest request) {
+    return client.getResponseMetadataForRequest(request);
+  }
+}
\ No newline at end of file
