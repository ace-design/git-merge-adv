diff --git a/java_case_studies/reference_repos/Jest/conflict10/desired.java b/java_case_studies/reference_repos/Jest/conflict10/spork_result.java
index 7145fca..4f7fa54 100644
--- a/java_case_studies/reference_repos/Jest/conflict10/desired.java
+++ b/java_case_studies/reference_repos/Jest/conflict10/spork_result.java
@@ -5,30 +5,34 @@ import com.google.gson.JsonElement;
 import com.google.gson.JsonObject;
 import com.google.gson.JsonParser;
 import io.searchbox.annotations.JestId;
-import org.slf4j.Logger;
-import org.slf4j.LoggerFactory;
-
 import java.lang.reflect.Field;
 import java.math.BigDecimal;
 import java.math.BigInteger;
 import java.util.ArrayList;
 import java.util.List;
 import java.util.Map;
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
+
 
 /**
  * @author Dogukan Sonmez
  */
-
 public class JestResult {
-
     public static final String ES_METADATA_ID = "es_metadata_id";
+
     private final static Logger log = LoggerFactory.getLogger(JestResult.class);
 
     protected JsonObject jsonObject;
+
     protected String jsonString;
+
     protected String pathToResult;
+
     protected boolean isSucceeded;
+
     protected String errorMessage;
+
     protected Gson gson;
 
     private JestResult() {
@@ -127,7 +131,6 @@ public class JestResult {
 
     protected List<JsonElement> extractSource() {
         List<JsonElement> sourceList = new ArrayList<JsonElement>();
-
         if (jsonObject != null) {
             String[] keys = getKeys();
             if (keys == null) {
@@ -136,10 +139,9 @@ public class JestResult {
                 String sourceKey = keys[keys.length - 1];
                 JsonElement obj = jsonObject.get(keys[0]);
                 if (keys.length > 1) {
-                    for (int i = 1; i < keys.length - 1; i++) {
-                        obj = ((JsonObject) obj).get(keys[i]);
+                    for (int i = 1; i < (keys.length - 1); i++) {
+                        obj = ((JsonObject) (obj)).get(keys[i]);
                     }
-
                     if (obj.isJsonObject()) {
                         JsonElement source = obj.getAsJsonObject().get(sourceKey);
                         if (source != null) {
@@ -160,13 +162,18 @@ public class JestResult {
                 } else if (obj != null) {
                     JsonElement objId = jsonObject.get("_id");
                     if ((objId != null) && obj.isJsonObject()) {
+<<<<<<< LEFT
                         obj.getAsJsonObject().add(ES_METADATA_ID, objId);
+=======
+                    ((JsonObject) obj).add(ES_METADATA_ID, jsonObject.get("_id"));
+                    sourceList.add(obj);
+>>>>>>> RIGHT
+
                     }
                     sourceList.add(obj);
                 }
             }
         }
-
         return sourceList;
     }
 
@@ -255,5 +262,4 @@ public class JestResult {
     protected String[] getKeys() {
         return pathToResult == null ? null : (pathToResult + "").split("/");
     }
-
 }
