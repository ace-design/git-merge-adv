diff --git a/java_case_studies/reference_repos/Jest/conflict10/desired.java b/java_case_studies/demo_results/MethodUnion/Jest-conflict10.java
index 7145fca..0cbdcfc 100644
--- a/java_case_studies/reference_repos/Jest/conflict10/desired.java
+++ b/java_case_studies/demo_results/MethodUnion/Jest-conflict10.java
@@ -1,5 +1,4 @@
 package io.searchbox.client;
-
 import com.google.gson.Gson;
 import com.google.gson.JsonElement;
 import com.google.gson.JsonObject;
@@ -7,7 +6,6 @@ import com.google.gson.JsonParser;
 import io.searchbox.annotations.JestId;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
-
 import java.lang.reflect.Field;
 import java.math.BigDecimal;
 import java.math.BigInteger;
@@ -15,21 +13,16 @@ import java.util.ArrayList;
 import java.util.List;
 import java.util.Map;
 
-/**
- * @author Dogukan Sonmez
- */
-
-public class JestResult {
+public class JestResult{
 
-    public static final String ES_METADATA_ID = "es_metadata_id";
-    private final static Logger log = LoggerFactory.getLogger(JestResult.class);
-
-    protected JsonObject jsonObject;
-    protected String jsonString;
-    protected String pathToResult;
-    protected boolean isSucceeded;
-    protected String errorMessage;
-    protected Gson gson;
+    public static final String ES_METADATA_ID = "es_metadata_id";,
+    private final static Logger log = LoggerFactory.getLogger(JestResult.class);,
+    protected JsonObject jsonObject;,
+    protected String jsonString;,
+    protected String pathToResult;,
+    protected boolean isSucceeded;,
+    protected String errorMessage;,
+    protected Gson gson;,
 
     private JestResult() {
     }
@@ -73,6 +66,7 @@ public class JestResult {
     /**
      * manually set an error message, eg. for the cases where non-200 response code is received
      */
+
     public void setErrorMessage(String errorMessage) {
         this.errorMessage = errorMessage;
     }
@@ -158,10 +152,14 @@ public class JestResult {
                         }
                     }
                 } else if (obj != null) {
+<<<<<<< left_content.java
+                    ((JsonObject) obj).add(ES_METADATA_ID, jsonObject.get("_id"));
+=======
                     JsonElement objId = jsonObject.get("_id");
                     if ((objId != null) && obj.isJsonObject()) {
                         obj.getAsJsonObject().add(ES_METADATA_ID, objId);
                     }
+>>>>>>> right_content.java
                     sourceList.add(obj);
                 }
             }
@@ -170,6 +168,7 @@ public class JestResult {
         return sourceList;
     }
 
+
     protected <T> T createSourceObject(JsonElement source, Class<T> type) {
         T obj = null;
         try {
@@ -256,4 +255,4 @@ public class JestResult {
         return pathToResult == null ? null : (pathToResult + "").split("/");
     }
 
-}
+}
\ No newline at end of file
