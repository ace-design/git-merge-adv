diff --git a/java_case_studies/reference_repos/Jest/conflict4/desired.java b/java_case_studies/reference_repos/Jest/conflict4/spork_result.java
index 0b9593a..cc0bf66 100644
--- a/java_case_studies/reference_repos/Jest/conflict4/desired.java
+++ b/java_case_studies/reference_repos/Jest/conflict4/spork_result.java
@@ -5,18 +5,19 @@ import com.google.gson.JsonElement;
 import com.google.gson.JsonObject;
 import com.google.gson.JsonParser;
 import com.google.gson.JsonSyntaxException;
-
 import io.searchbox.action.AbstractAction;
 import io.searchbox.action.AbstractMultiIndexActionBuilder;
 import io.searchbox.action.AbstractMultiTypeActionBuilder;
 import org.apache.commons.lang3.StringUtils;
 import org.apache.commons.lang3.builder.HashCodeBuilder;
 
+
 /**
  * @author Bartosz Polnik
  */
 public class Cat extends AbstractAction<CatResult> {
     private final static String PATH_TO_RESULT = "result";
+
     private final String operationPath;
 
     protected <T extends AbstractAction.Builder<Cat, ? extends Builder> & CatBuilder> Cat(T builder) {
@@ -90,6 +91,7 @@ public class Cat extends AbstractAction<CatResult> {
 
     public static class AliasesBuilder extends AbstractMultiIndexActionBuilder<Cat, AliasesBuilder> implements CatBuilder {
         private static final String operationPath = "aliases";
+
         public AliasesBuilder() {
             setHeader("accept", "application/json");
             setHeader("content-type", "application/json");
@@ -108,6 +110,7 @@ public class Cat extends AbstractAction<CatResult> {
 
     public static class ShardsBuilder extends AbstractMultiIndexActionBuilder<Cat, ShardsBuilder> implements CatBuilder {
         private static final String operationPath = "shards";
+
         public ShardsBuilder() {
             setHeader("accept", "application/json");
             setHeader("content-type", "application/json");
@@ -125,16 +128,22 @@ public class Cat extends AbstractAction<CatResult> {
 
         @Override
         public String getJoinedIndices() {
+<<<<<<< LEFT
             if (indexNames.size() > 0) {
                 return StringUtils.join(indexNames, ",");
             } else {
                 return null;
             }
+=======
+            return indexNames.size() > 0 ? StringUtils.join(indexNames, ",") : null;
+>>>>>>> RIGHT
+
         }
     }
 
     public static class NodesBuilder extends AbstractAction.Builder<Cat, NodesBuilder> implements CatBuilder {
         private static final String operationPath = "nodes";
+
         public NodesBuilder() {
             setHeader("accept", "application/json");
             setHeader("content-type", "application/json");
@@ -152,6 +161,6 @@ public class Cat extends AbstractAction<CatResult> {
     }
 
     protected interface CatBuilder {
-        String operationPath();
+        public abstract String operationPath();
     }
 }
