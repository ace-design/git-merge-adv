diff --git a/java_case_studies/reference_repos/Jest/conflict4/desired.java b/java_case_studies/demo_results/MethodUnion/Jest-conflict4.java
index 0b9593a..a8b6be3 100644
--- a/java_case_studies/reference_repos/Jest/conflict4/desired.java
+++ b/java_case_studies/demo_results/MethodUnion/Jest-conflict4.java
@@ -1,23 +1,19 @@
 package io.searchbox.core;
-
 import com.google.gson.Gson;
 import com.google.gson.JsonElement;
 import com.google.gson.JsonObject;
 import com.google.gson.JsonParser;
 import com.google.gson.JsonSyntaxException;
-
 import io.searchbox.action.AbstractAction;
 import io.searchbox.action.AbstractMultiIndexActionBuilder;
 import io.searchbox.action.AbstractMultiTypeActionBuilder;
 import org.apache.commons.lang3.StringUtils;
 import org.apache.commons.lang3.builder.HashCodeBuilder;
 
-/**
- * @author Bartosz Polnik
- */
-public class Cat extends AbstractAction<CatResult> {
-    private final static String PATH_TO_RESULT = "result";
-    private final String operationPath;
+public class Cat extends AbstractAction<CatResult>{
+
+    private final static String PATH_TO_RESULT = "result";,
+    private final String operationPath;,
 
     protected <T extends AbstractAction.Builder<Cat, ? extends Builder> & CatBuilder> Cat(T builder) {
         super(builder);
@@ -69,8 +65,9 @@ public class Cat extends AbstractAction<CatResult> {
                 .toHashCode();
     }
 
-    public static class IndicesBuilder extends AbstractMultiTypeActionBuilder<Cat, IndicesBuilder> implements CatBuilder {
-        private static final String operationPath = "indices";
+    public static class IndicesBuilder extends AbstractMultiTypeActionBuilder<Cat, IndicesBuilder> implements CatBuilder{
+
+        private static final String operationPath = "indices";,
 
         public IndicesBuilder() {
             setHeader("accept", "application/json");
@@ -86,10 +83,12 @@ public class Cat extends AbstractAction<CatResult> {
         public String operationPath() {
             return operationPath;
         }
+
     }
+    public static class AliasesBuilder extends AbstractMultiIndexActionBuilder<Cat, AliasesBuilder> implements CatBuilder{
+
+        private static final String operationPath = "aliases";,
 
-    public static class AliasesBuilder extends AbstractMultiIndexActionBuilder<Cat, AliasesBuilder> implements CatBuilder {
-        private static final String operationPath = "aliases";
         public AliasesBuilder() {
             setHeader("accept", "application/json");
             setHeader("content-type", "application/json");
@@ -104,10 +103,12 @@ public class Cat extends AbstractAction<CatResult> {
         public String operationPath() {
             return operationPath;
         }
+
     }
+    public static class ShardsBuilder extends AbstractMultiIndexActionBuilder<Cat, ShardsBuilder> implements CatBuilder{
+
+        private static final String operationPath = "shards";,
 
-    public static class ShardsBuilder extends AbstractMultiIndexActionBuilder<Cat, ShardsBuilder> implements CatBuilder {
-        private static final String operationPath = "shards";
         public ShardsBuilder() {
             setHeader("accept", "application/json");
             setHeader("content-type", "application/json");
@@ -125,16 +126,23 @@ public class Cat extends AbstractAction<CatResult> {
 
         @Override
         public String getJoinedIndices() {
+<<<<<<< left_content.java
             if (indexNames.size() > 0) {
                 return StringUtils.join(indexNames, ",");
             } else {
                 return null;
             }
+=======
+            return indexNames.size() > 0 ? StringUtils.join(indexNames, ",") : null;
+>>>>>>> right_content.java
         }
+
+
     }
+    public static class NodesBuilder extends AbstractAction.Builder<Cat, NodesBuilder> implements CatBuilder{
+
+        private static final String operationPath = "nodes";,
 
-    public static class NodesBuilder extends AbstractAction.Builder<Cat, NodesBuilder> implements CatBuilder {
-        private static final String operationPath = "nodes";
         public NodesBuilder() {
             setHeader("accept", "application/json");
             setHeader("content-type", "application/json");
@@ -149,9 +157,12 @@ public class Cat extends AbstractAction<CatResult> {
         public String operationPath() {
             return operationPath;
         }
+
     }
+    protected interface CatBuilder{
+
 
-    protected interface CatBuilder {
         String operationPath();
+
     }
-}
+}
\ No newline at end of file
