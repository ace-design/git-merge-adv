diff --git a/java_case_studies/reference_repos/Jest/conflict2/left.java b/java_case_studies/reference_repos/Jest/conflict2/right.java
index ad430dd..965ef96 100644
--- a/java_case_studies/reference_repos/Jest/conflict2/left.java
+++ b/java_case_studies/reference_repos/Jest/conflict2/right.java
@@ -1,16 +1,22 @@
 package io.searchbox.indices.aliases;
 
+import com.google.common.base.Joiner;
 import io.searchbox.action.AbstractMultiIndexActionBuilder;
 import io.searchbox.action.GenericResultAbstractAction;
-import io.searchbox.client.config.ElasticsearchVersion;
+import java.util.Collection;
+import java.util.LinkedHashSet;
+import java.util.Set;
 
 /**
  * @author cihat keser
  */
 public class GetAliases extends GenericResultAbstractAction {
+    protected String aliasName;
 
     protected GetAliases(Builder builder) {
         super(builder);
+        aliasName = builder.getJoinedAliases();
+        setURI(buildURI());
     }
 
     @Override
@@ -19,12 +25,37 @@ public class GetAliases extends GenericResultAbstractAction {
     }
 
     @Override
-    protected String buildURI(ElasticsearchVersion elasticsearchVersion) {
-        return super.buildURI(elasticsearchVersion) + "/_aliases";
+    protected String buildURI() {
+        if (aliasName == null){
+            return super.buildURI() + "/_alias";
+        } else {
+            return super.buildURI() + "/_alias/" + aliasName;
+        }
     }
 
     public static class Builder extends AbstractMultiIndexActionBuilder<GetAliases, Builder> {
 
+        protected Set<String> aliasNames = new LinkedHashSet<String>();
+
+        public String getJoinedAliases() {
+            if (aliasNames.size() > 0) {
+                return Joiner.on(',').join(aliasNames);
+            } else {
+                return null;
+            }
+        }
+
+        public Builder addAlias(String aliasName) {
+            this.aliasNames.add(aliasName);
+            return this;
+        }
+
+        public Builder addAliases(Collection<? extends String> aliasNames) {
+            this.aliasNames.addAll(aliasNames);
+            return this;
+        }
+
+
         @Override
         public GetAliases build() {
             return new GetAliases(this);
