diff --git a/java_case_studies/reference_repos/Jest/conflict12/left.java b/java_case_studies/reference_repos/Jest/conflict12/right.java
index 98684c9..5adbb17 100644
--- a/java_case_studies/reference_repos/Jest/conflict12/left.java
+++ b/java_case_studies/reference_repos/Jest/conflict12/right.java
@@ -1,44 +1,24 @@
 package io.searchbox.client;
 
-import com.github.tlrx.elasticsearch.test.annotations.ElasticsearchAdminClient;
-import com.github.tlrx.elasticsearch.test.annotations.ElasticsearchNode;
-import com.github.tlrx.elasticsearch.test.support.junit.runners.ElasticsearchRunner;
 import io.searchbox.client.config.HttpClientConfig;
 import io.searchbox.client.http.JestHttpClient;
-import org.elasticsearch.client.AdminClient;
-import org.elasticsearch.node.Node;
+import org.elasticsearch.test.ElasticsearchIntegrationTest;
 import org.junit.Test;
-import org.junit.runner.RunWith;
-import org.slf4j.Logger;
-import org.slf4j.LoggerFactory;
 
 import java.util.concurrent.TimeUnit;
 
-import static junit.framework.Assert.assertEquals;
-import static junit.framework.Assert.assertNotNull;
-
 /**
  * @author cihat keser
  */
-@RunWith(ElasticsearchRunner.class)
-public class JestClientFactoryIntegrationTest {
-
-    final static Logger log = LoggerFactory.getLogger(JestClientFactoryIntegrationTest.class);
-
-    @ElasticsearchNode
-    Node first;
+@ElasticsearchIntegrationTest.ClusterScope(scope = ElasticsearchIntegrationTest.Scope.TEST, numNodes = 0)
+public class JestClientFactoryIntegrationTest extends ElasticsearchIntegrationTest {
 
-    @ElasticsearchNode(name = "2nd")
-    Node node;
-    @ElasticsearchAdminClient
-    AdminClient adminClient;
     JestClientFactory factory = new JestClientFactory();
 
     @Test
     public void testDiscovery() throws InterruptedException {
-        // wait for 2 active nodes
-        adminClient.cluster().prepareHealth().setWaitForGreenStatus().
-                setWaitForNodes("2").setWaitForRelocatingShards(0).execute().actionGet();
+        // wait for 3 active nodes
+        cluster().ensureAtLeastNumNodes(4);
 
         factory.setHttpClientConfig(new HttpClientConfig
                 .Builder("http://localhost:9200")
@@ -51,21 +31,26 @@ public class JestClientFactoryIntegrationTest {
         // wait for NodeChecker to do the discovery
         Thread.sleep(3000);
 
-        assertEquals("All 2 nodes should be discovered and be in the client's server list", 2, jestClient.getServers().size());
+        assertEquals(
+                "All 4 nodes should be discovered and be in the client's server list",
+                4,
+                jestClient.getServers().size()
+        );
 
-        // now close first client
-        first.close();
+        cluster().ensureAtMostNumNodes(3);
 
-        // wait for second node to stop
-        while(!first.isClosed()) {
-            Thread.sleep(500);
-            log.info("Waiting for second node to stop...");
+        int numServers = 0;
+        int retries = 0;
+        while(numServers != 3 && retries < 30) {
+            numServers = jestClient.getServers().size();
+            retries++;
+            Thread.sleep(1000);
         }
 
-        // wait for NodeChecker to do the discovery
-        Thread.sleep(1500);
-
-        assertEquals("Only 1 node should be in Jest's list", 1, jestClient.getServers().size());
-
+        assertEquals(
+                "Only 3 nodes should be in Jest's list",
+                3,
+                jestClient.getServers().size()
+        );
     }
 }
