diff --git a/python_case_studies/reference_repos/blaze/importC3/left.py b/python_case_studies/reference_repos/blaze/importC3/right.py
index 29f8c66..5ceebad 100644
--- a/python_case_studies/reference_repos/blaze/importC3/left.py
+++ b/python_case_studies/reference_repos/blaze/importC3/right.py
@@ -19,10 +19,26 @@ from toolz import unique
 
 from odo import odo, drop
 from blaze.compatibility import xfail
-from blaze.compute.sql import (compute, select, lower_column, compute_up,
-                               get_all_froms)
-from blaze.expr import (symbol, transform, summary, by, sin, join, floor, cos,
-                        merge, nunique, mean, sum, count, exp, datetime as bz_datetime)
+from blaze.compute.sql import compute, select, lower_column, compute_up
+from blaze.expr import (
+    by,
+    cos,
+    count,
+    datetime as bz_datetime,
+    exp,
+    floor,
+    greatest,
+    join,
+    least,
+    mean,
+    merge,
+    nunique,
+    sin,
+    sum,
+    summary,
+    symbol,
+    transform,
+)
 from blaze.utils import tmpfile, example, normalize
 
 
@@ -519,7 +535,7 @@ def test_head():
 def test_sample():
     order_by = select(s).order_by(sa.func.random())
     assert str(compute(t.sample(n=5), s)) == str(order_by.limit(5))
-    limit_frac = sa.select([sa.func.count() * 0.5], from_obj=get_all_froms(s)).as_scalar()
+    limit_frac = select([sa.func.count() * 0.5]).as_scalar()
     assert str(compute(t.sample(frac=0.5), s)) == str(order_by.limit(limit_frac))
 
 
@@ -2035,3 +2051,15 @@ def test_inner_select_with_filter():
             s.a = anon_1.a
         """,
     )
+
+
+@pytest.mark.parametrize('op', (greatest, least))
+def test_greatest(op):
+    ds = 'var * {a: int32, b: int32}'
+    db = resource('sqlite:///:memory:::s', dshape=ds)
+    odo([(1, 2)], db)
+    s = symbol('s', dshape=ds)
+
+    assert normalize(compute(op(s.a, s.b), db)) == normalize(
+        'select {op}(s.a, s.b) as {op}_1 from s'.format(op=op.__name__),
+    )
