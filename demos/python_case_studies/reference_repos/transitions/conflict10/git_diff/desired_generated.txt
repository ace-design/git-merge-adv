diff --git a/python_case_studies/reference_repos/transitions/conflict10/desired.py b/python_case_studies/demo_results/MethodUnion/transitions-conflict10.py
index aa83cf6..0efb13a 100644
--- a/python_case_studies/reference_repos/transitions/conflict10/desired.py
+++ b/python_case_studies/demo_results/MethodUnion/transitions-conflict10.py
@@ -1,3 +1,11 @@
+import inspect
+import itertools
+import logging
+from collections import OrderedDict,defaultdict,deque
+from functools import partial
+from six import string_types
+import warnings
+import enum
 """
     transitions.core
     ----------------
@@ -13,15 +21,7 @@ except ImportError:
     # python2
     pass
 
-import inspect
-import itertools
-import logging
-import warnings
-import enum
 
-from collections import OrderedDict, defaultdict, deque
-from functools import partial
-from six import string_types
 
 _LOGGER = logging.getLogger(__name__)
 _LOGGER.addHandler(logging.NullHandler())
@@ -93,8 +93,12 @@ class State(object):
     # Dynamic methods for states must always start with `on_`!
     dynamic_methods = ['on_enter', 'on_exit']
 
+<<<<<<< left_content.py
     def __init__(self, name, on_enter=None, on_exit=None,
                  ignore_invalid_triggers=None):
+=======
+    def __init__(self, name, on_enter=None, on_exit=None, ignore_invalid_triggers=False):
+>>>>>>> right_content.py
         """
         Args:
             name (string): The name of the state
@@ -1146,3 +1150,4 @@ class MachineError(Exception):
 
     def __str__(self):
         return repr(self.value)
+
