diff --git a/python_case_studies/reference_repos/cryptography/importC3/desired.py b/python_case_studies/demo_results/MethodUnion/cryptography-importC3.py
index 5de506a..dcc7faa 100644
--- a/python_case_studies/reference_repos/cryptography/importC3/desired.py
+++ b/python_case_studies/demo_results/MethodUnion/cryptography-importC3.py
@@ -1,3 +1,43 @@
+from __future__ import absolute_import,division,print_function
+import itertools
+from cryptography import utils
+from cryptography.exceptions import (
+    InvalidTag,
+    InternalError,
+    AlreadyFinalized,
+    UnsupportedPadding,
+    UnsupportedCipher,
+    UnsupportedHash,
+    UnsupportedAlgorithm,
+    InvalidSignature,
+)
+from cryptography.hazmat.backends.interfaces import (
+    CipherBackend,
+    HashBackend,
+    HMACBackend,
+    PBKDF2HMACBackend,
+    RSABackend,
+)
+from cryptography.hazmat.bindings.openssl.binding import Binding
+from cryptography.hazmat.primitives import interfaces,hashes
+from cryptography.hazmat.primitives.asymmetric import rsa
+from cryptography.hazmat.primitives.ciphers.algorithms import (
+    AES,
+    Blowfish,
+    Camellia,
+    TripleDES,
+    ARC4,
+    CAST5,
+)
+from cryptography.hazmat.primitives.ciphers.modes import (
+    CBC,
+    CTR,
+    ECB,
+    OFB,
+    CFB,
+    GCM,
+)
+import collections
 # Licensed under the Apache License, Version 2.0 (the "License");
 # you may not use this file except in compliance with the License.
 # You may obtain a copy of the License at
@@ -11,28 +51,8 @@
 # See the License for the specific language governing permissions and
 # limitations under the License.
 
-from __future__ import absolute_import, division, print_function
 
-import collections
-import itertools
 
-from cryptography import utils
-from cryptography.exceptions import (
-    InvalidTag, InternalError, AlreadyFinalized, UnsupportedPadding,
-    InvalidSignature
-)
-from cryptography.hazmat.backends.interfaces import (
-    CipherBackend, HashBackend, HMACBackend, PBKDF2HMACBackend, RSABackend
-)
-from cryptography.hazmat.bindings.openssl.binding import Binding
-from cryptography.hazmat.primitives import interfaces, hashes
-from cryptography.hazmat.primitives.asymmetric import rsa
-from cryptography.hazmat.primitives.ciphers.algorithms import (
-    AES, Blowfish, Camellia, TripleDES, ARC4, CAST5
-)
-from cryptography.hazmat.primitives.ciphers.modes import (
-    CBC, CTR, ECB, OFB, CFB, GCM,
-)
 
 
 _OpenSSLError = collections.namedtuple("_OpenSSLError",
@@ -806,3 +826,4 @@ class _RSAVerificationContext(object):
 
 
 backend = Backend()
+
