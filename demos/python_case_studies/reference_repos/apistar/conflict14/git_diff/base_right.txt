diff --git a/python_case_studies/reference_repos/apistar/conflict14/base.py b/python_case_studies/reference_repos/apistar/conflict14/right.py
index 01b94f7..f2cfc5b 100644
--- a/python_case_studies/reference_repos/apistar/conflict14/base.py
+++ b/python_case_studies/reference_repos/apistar/conflict14/right.py
@@ -1,11 +1,15 @@
 import inspect
 from collections import OrderedDict
+from typing import Any, Callable, Dict, List
 
 import click
 
 from apistar import commands, pipelines, routing, schema
 
 
+DEFAULT_LOOKUP_CACHE_SIZE = 10000
+
+
 class App(object):
     built_in_commands = (
         commands.new,
@@ -13,21 +17,31 @@ class App(object):
         commands.test,
     )
 
-    def __init__(self, routes=None, commands=None):
+    def __init__(self,
+                 routes: List[routing.Route] = None,
+                 commands: List[Callable] = None,
+                 settings: Dict[str, Any] = None) -> None:
+        from apistar.settings import Settings
+
         routes = [] if (routes is None) else routes
         commands = [] if (commands is None) else commands
 
         self.routes = routes
         self.commands = list(self.built_in_commands) + commands
+        self.settings = Settings(settings or {})
 
         self.router = routing.Router(self.routes)
         self.wsgi = get_wsgi_server(app=self)
         self.click = get_click_client(app=self)
 
 
-def get_wsgi_server(app, lookup_cache_size=10000):
+def get_wsgi_server(app):
     lookup = app.router.lookup
     lookup_cache = OrderedDict()  # FIFO Cache for URL lookups.
+    lookup_cache_size = app.settings.get(
+        ['ROUTING', 'LOOKUP_CACHE_SIZE'],
+        DEFAULT_LOOKUP_CACHE_SIZE
+    )
 
     # Pre-fill the lookup cache for URLs without path arguments.
     for path, method, view in app.router.routes:
