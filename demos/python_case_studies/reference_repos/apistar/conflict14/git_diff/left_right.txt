diff --git a/python_case_studies/reference_repos/apistar/conflict14/left.py b/python_case_studies/reference_repos/apistar/conflict14/right.py
index 85a769b..f2cfc5b 100644
--- a/python_case_studies/reference_repos/apistar/conflict14/left.py
+++ b/python_case_studies/reference_repos/apistar/conflict14/right.py
@@ -1,10 +1,13 @@
 import inspect
 from collections import OrderedDict
+from typing import Any, Callable, Dict, List
 
 import click
 
 from apistar import commands, pipelines, routing, schema
-from apistar.db import DBBackend
+
+
+DEFAULT_LOOKUP_CACHE_SIZE = 10000
 
 
 class App(object):
@@ -12,26 +15,33 @@ class App(object):
         commands.new,
         commands.run,
         commands.test,
-        commands.create_tables,
     )
 
-    def __init__(self, routes=None, commands=None, db_engine_config=None):
+    def __init__(self,
+                 routes: List[routing.Route] = None,
+                 commands: List[Callable] = None,
+                 settings: Dict[str, Any] = None) -> None:
+        from apistar.settings import Settings
+
         routes = [] if (routes is None) else routes
         commands = [] if (commands is None) else commands
 
         self.routes = routes
         self.commands = list(self.built_in_commands) + commands
-
-        self.db_engine_config = db_engine_config
+        self.settings = Settings(settings or {})
 
         self.router = routing.Router(self.routes)
         self.wsgi = get_wsgi_server(app=self)
         self.click = get_click_client(app=self)
 
 
-def get_wsgi_server(app, lookup_cache_size=10000):
+def get_wsgi_server(app):
     lookup = app.router.lookup
     lookup_cache = OrderedDict()  # FIFO Cache for URL lookups.
+    lookup_cache_size = app.settings.get(
+        ['ROUTING', 'LOOKUP_CACHE_SIZE'],
+        DEFAULT_LOOKUP_CACHE_SIZE
+    )
 
     # Pre-fill the lookup cache for URLs without path arguments.
     for path, method, view in app.router.routes:
@@ -45,12 +55,12 @@ def get_wsgi_server(app, lookup_cache_size=10000):
         lookup_key = method + ' ' + path
         state = {
             'wsgi_environ': environ,
+            'app': app,
             'method': method,
             'path': path,
             'exception': None,
             'view': None,
-            'url_path_args': {},
-            'db_backend': DBBackend.build(db_engine_config=app.db_engine_config)
+            'url_path_args': {}
         }
 
         try:
