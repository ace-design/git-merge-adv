diff --git a/python_case_studies/reference_repos/mypy/importC3/left.py b/python_case_studies/reference_repos/mypy/importC3/right.py
index 3d24d1b..3589080 100644
--- a/python_case_studies/reference_repos/mypy/importC3/left.py
+++ b/python_case_studies/reference_repos/mypy/importC3/right.py
@@ -17,8 +17,7 @@ from mypy.nodes import (
     Context, ListComprehension, ConditionalExpr, GeneratorExpr,
     Decorator, SetExpr, PassStmt, TypeVarExpr, UndefinedExpr, PrintStmt,
     LITERAL_TYPE, BreakStmt, ContinueStmt, ComparisonExpr, StarExpr,
-    YieldFromExpr, YieldFromStmt, NamedTupleExpr, SetComprehension,
-    DictionaryComprehension
+    YieldFromExpr, YieldFromStmt, NamedTupleExpr, ComplexExpr
 )
 from mypy.nodes import function_type, method_type
 from mypy import nodes
@@ -1719,6 +1718,9 @@ class TypeChecker(NodeVisitor[Type]):
     def visit_float_expr(self, e: FloatExpr) -> Type:
         return self.expr_checker.visit_float_expr(e)
 
+    def visit_complex_expr(self, e: ComplexExpr) -> Type:
+        return self.expr_checker.visit_complex_expr(e)
+
     def visit_op_expr(self, e: OpExpr) -> Type:
         return self.expr_checker.visit_op_expr(e)
 
@@ -1769,15 +1771,9 @@ class TypeChecker(NodeVisitor[Type]):
     def visit_list_comprehension(self, e: ListComprehension) -> Type:
         return self.expr_checker.visit_list_comprehension(e)
 
-    def visit_set_comprehension(self, e: SetComprehension) -> Type:
-        return self.expr_checker.visit_set_comprehension(e)
-
     def visit_generator_expr(self, e: GeneratorExpr) -> Type:
         return self.expr_checker.visit_generator_expr(e)
 
-    def visit_dictionary_comprehension(self, e: DictionaryComprehension) -> Type:
-        return self.expr_checker.visit_dictionary_comprehension(e)
-
     def visit_undefined_expr(self, e: UndefinedExpr) -> Type:
         return self.expr_checker.visit_undefined_expr(e)
 
