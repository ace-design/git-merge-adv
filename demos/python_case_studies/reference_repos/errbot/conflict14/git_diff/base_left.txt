diff --git a/python_case_studies/reference_repos/errbot/conflict14/base.py b/python_case_studies/reference_repos/errbot/conflict14/left.py
index 54e8c88..d1eeeb0 100644
--- a/python_case_studies/reference_repos/errbot/conflict14/base.py
+++ b/python_case_studies/reference_repos/errbot/conflict14/left.py
@@ -27,7 +27,7 @@ from errbot.backends.base import (
 )
 from errbot.core_plugins.wsview import reset_app  # noqa
 from errbot.errBot import ErrBot  # noqa
-from errbot.main import main  # noqa
+from errbot.main import setup_bot  # noqa
 
 incoming_stanza_queue = Queue()
 outgoing_message_queue = Queue()
@@ -41,7 +41,7 @@ STZ_IQ = 3
 
 
 class MUCRoom(MUCRoom):
-    def __init__(self, jid=None, node='', domain='', resource='', occupants=None, topic=None):
+    def __init__(self, jid=None, node='', domain='', resource='', occupants=None, topic=None, bot=None):
         """
         :param jid: See parent class.
         :param node: See parent class.
@@ -54,7 +54,7 @@ class MUCRoom(MUCRoom):
             occupants = []
         self._occupants = occupants
         self._topic = topic
-        super(MUCRoom, self).__init__(jid=jid, node=node, domain=domain, resource=resource)
+        super(MUCRoom, self).__init__(jid=jid, node=node, domain=domain, resource=resource, bot=bot)
 
     @property
     def occupants(self):
@@ -75,7 +75,6 @@ class MUCRoom(MUCRoom):
     def join(self, username=None, password=None):
         global rooms
         import config
-        from errbot.holder import bot
         bot_itself = config.BOT_IDENTITY['username']
 
         if self.joined:
@@ -89,12 +88,11 @@ class MUCRoom(MUCRoom):
         room = [r for r in rooms if str(r) == str(self)][0]
         room._occupants.append(MUCOccupant(bot_itself))
         log.info("Joined room {!s}".format(self))
-        bot.callback_room_joined(room)
+        self._bot.callback_room_joined(room)
 
     def leave(self, reason=None):
         global rooms
         import config
-        from errbot.holder import bot
         bot_itself = config.BOT_IDENTITY['username']
 
         if not self.joined:
@@ -104,7 +102,7 @@ class MUCRoom(MUCRoom):
         room = [r for r in rooms if str(r) == str(self)][0]
         room._occupants = [o for o in room._occupants if str(o) != bot_itself]
         log.info("Left room {!s}".format(self))
-        bot.callback_room_left(room)
+        self._bot.callback_room_left(room)
 
     @property
     def exists(self):
@@ -138,8 +136,7 @@ class MUCRoom(MUCRoom):
         room = [r for r in rooms if str(r) == str(self)][0]
         room._topic = self._topic
         log.info("Topic for room {!s} set to '{}'".format(self, topic))
-        from errbot.holder import bot
-        bot.callback_room_topic(self)
+        self._bot.callback_room_topic(self)
 
 
 class TestBackend(ErrBot):
@@ -206,7 +203,7 @@ class TestBackend(ErrBot):
         try:
             return [r for r in rooms if str(r) == str(room)][0]
         except IndexError:
-            r = MUCRoom(jid=room)
+            r = MUCRoom(jid=room, bot=self)
             return r
 
     def groupchat_reply_format(self):
@@ -287,8 +284,8 @@ class TestBot(object):
         """
         if self.bot_thread is not None:
             raise Exception("Bot has already been started")
-        self.bot_thread = Thread(target=main, name='TestBot main thread',
-                                 args=(TestBackend, self.logger, self.bot_config))
+        self.bot = setup_bot(TestBackend, self.logger, self.bot_config)
+        self.bot_thread = Thread(target=self.bot.serve_forever, name='TestBot main thread')
         self.bot_thread.setDaemon(True)
         self.bot_thread.start()
 
