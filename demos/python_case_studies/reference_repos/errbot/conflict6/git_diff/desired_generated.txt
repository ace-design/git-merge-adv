diff --git a/python_case_studies/reference_repos/errbot/conflict6/desired.py b/python_case_studies/demo_results/MethodUnion/errbot-conflict6.py
index d62a91c..292c9c6 100644
--- a/python_case_studies/reference_repos/errbot/conflict6/desired.py
+++ b/python_case_studies/demo_results/MethodUnion/errbot-conflict6.py
@@ -1,54 +1,57 @@
 from urllib.request import urlopen
-from urllib.error import HTTPError, URLError
-
+from urllib.error import HTTPError,URLError
 from errbot import BotPlugin
 from errbot.utils import version2array
 from errbot.version import VERSION
-
 HOME = 'http://version.errbot.io/'
 
 installed_version = version2array(VERSION)
 
-
 class VersionChecker(BotPlugin):
-
     connected = False
     activated = False
-
     def activate(self):
-        if self.mode not in ('null', 'test', 'Dummy'):  # skip in all test confs.
+        if self.mode not in ('null', 'test', 'Dummy'):
             self.activated = True
-            self.version_check()  # once at startup anyway
-            self.start_poller(3600 * 24, self.version_check)  # once every 24H
+            self.version_check()
+            self.start_poller(3600 * 24, self.version_check)
             super().activate()
         else:
             self.log.info('Skip version checking under %s mode' % self.mode)
-
+    
     def deactivate(self):
         self.activated = False
         super().deactivate()
-
+    
     def version_check(self):
         if not self.activated:
             self.log.debug('Version check disabled')
             return
         self.log.debug('Checking version')
-        # noinspection PyBroadException
         try:
-            current_version_txt = urlopen(url=HOME + '?' + VERSION,
-                                          timeout=10).read().decode("utf-8").strip()
-            self.log.debug("Tested current Errbot version and it is " + current_version_txt)
+            current_version_txt = urlopen(url=HOME + '?' + VERSION, timeout=10
+                ).read().decode('utf-8').strip()
+            self.log.debug('Tested current Errbot version and it is ' +
+                current_version_txt)
             current_version = version2array(current_version_txt)
             if installed_version < current_version:
-                self.log.debug('A new version %s has been found, notify the admins !' % current_version)
+                self.log.debug(
+                    'A new version %s has been found, notify the admins !' %
+                    current_version)
                 self.warn_admins(
-                    'Version {0} of err is available. http://pypi.python.org/pypi/errbot/{0}.'
-                    ' You can disable this check '
-                    'by doing !plugin blacklist VersionChecker'.format(current_version_txt)
-                )
+<<<<<<< left_content.py
+                    'Version {0} of err is available. https://pypi.python.org/pypi/errbot/{0}. You can disable this check by doing !plugin blacklist VersionChecker'
+=======
+                    'Version {0} of err is available. http://pypi.python.org/pypi/errbot/{0}. You can disable this check by doing !plugin blacklist VersionChecker'
+>>>>>>> right_content.py
+                    .format(current_version_txt))
         except (HTTPError, URLError):
-            self.log.info('Could not establish connection to retrieve latest version.')
-
+            self.log.info(
+                'Could not establish connection to retrieve latest version.')
+    
+    
     def callback_connect(self):
         if not self.connected:
             self.connected = True
+    
+
